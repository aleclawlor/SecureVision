{"ast":null,"code":"var _jsxFileName = \"/Users/aleclawlor/SecureVision/client/src/components/cameraFeed/cameraLayout.js\";\nimport React, { Component } from 'react';\nimport VideoComponent from './VideoComponent';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport MainFeed from './mainFeed';\n\nconst Axios = require('axios');\n\nclass CameraLayout extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      camerasList: [],\n      cameraNames: []\n    };\n  }\n\n  componentDidMount() {\n    // get all current cameras in the DB and \n    const getCameras = async () => {\n      let result = await Axios.get('/api/cameras/getCameras');\n      console.log(result);\n      this.setState({\n        camerasList: result.data\n      });\n      this.setState({\n        cameraNames: result.data.map(d => {\n          if (d.isActive) {\n            return d.name;\n          }\n        })\n      });\n    };\n\n    getCameras();\n  }\n\n  render() {\n    let scrollSideStyle = {\n      height: '610px',\n      color: '#000A40',\n      width: '400px',\n      position: 'absolute',\n      marginLeft: '140px',\n      overflow: 'scroll',\n      textAlign: 'center'\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        height: '700px',\n        color: '#000A40'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      style: {\n        width: '700px',\n        height: '600px',\n        marginRight: '400px',\n        backgroundColor: '#F6F7F8'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(MainFeed, {\n      name: \"Main Entrance\",\n      buttonNames: this.state.cameraNames,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: scrollSideStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        gridTemplateRows: 'repeat(6, 325px)',\n        width: '30%',\n        marginLeft: '50px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, this.state.camerasList.map((d, i) => {\n      if (d.isActive) {\n        return /*#__PURE__*/React.createElement(VideoComponent, {\n          key: i,\n          source: d.source,\n          name: d.name,\n          port: d.port,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 30\n          }\n        });\n      }\n    }))))));\n  }\n\n}\n\nexport default CameraLayout;","map":{"version":3,"sources":["/Users/aleclawlor/SecureVision/client/src/components/cameraFeed/cameraLayout.js"],"names":["React","Component","VideoComponent","Grid","Paper","MainFeed","Axios","require","CameraLayout","state","camerasList","cameraNames","componentDidMount","getCameras","result","get","console","log","setState","data","map","d","isActive","name","render","scrollSideStyle","height","color","width","position","marginLeft","overflow","textAlign","marginRight","backgroundColor","gridTemplateRows","i","source","port"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAMC,YAAN,SAA2BP,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAEjCQ,KAFiC,GAEzB;AACJC,MAAAA,WAAW,EAAE,EADT;AAEJC,MAAAA,WAAW,EAAE;AAFT,KAFyB;AAAA;;AAOjCC,EAAAA,iBAAiB,GAAE;AACf;AACA,UAAMC,UAAU,GAAG,YAAW;AAC1B,UAAIC,MAAM,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAU,yBAAV,CAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,WAAKI,QAAL,CAAc;AAACR,QAAAA,WAAW,EAAEI,MAAM,CAACK;AAArB,OAAd;AACA,WAAKD,QAAL,CAAc;AAACP,QAAAA,WAAW,EAAEG,MAAM,CAACK,IAAP,CAAYC,GAAZ,CAAiBC,CAAD,IAAO;AACjD,cAAGA,CAAC,CAACC,QAAL,EAAc;AACZ,mBAAOD,CAAC,CAACE,IAAT;AACH;AACE,SAJyB;AAAd,OAAd;AAKH,KATD;;AAUAV,IAAAA,UAAU;AACb;;AAEDW,EAAAA,MAAM,GAAE;AAER,QAAIC,eAAe,GAAG;AAACC,MAAAA,MAAM,EAAC,OAAR;AAAiBC,MAAAA,KAAK,EAAE,SAAxB;AAAmCC,MAAAA,KAAK,EAAE,OAA1C;AAAmDC,MAAAA,QAAQ,EAAE,UAA7D;AAAyEC,MAAAA,UAAU,EAAE,OAArF;AAA8FC,MAAAA,QAAQ,EAAE,QAAxG;AAAkHC,MAAAA,SAAS,EAAE;AAA7H,KAAtB;AAEA,wBACA;AAAK,MAAA,KAAK,EAAE;AAACJ,QAAAA,KAAK,EAAE,MAAR;AAAgBF,QAAAA,MAAM,EAAE,OAAxB;AAAiCC,QAAAA,KAAK,EAAE;AAAxC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC,OAAP;AAAgBF,QAAAA,MAAM,EAAC,OAAvB;AAAgCO,QAAAA,WAAW,EAAE,OAA7C;AAAsDC,QAAAA,eAAe,EAAE;AAAvE,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAE,eAAhB;AAAiC,MAAA,WAAW,EAAE,KAAKzB,KAAL,CAAWE,WAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADA,eAMA,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,KAAK,EAAEc,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,KAAK,EAAE;AAACU,QAAAA,gBAAgB,EAAE,kBAAnB;AAAuCP,QAAAA,KAAK,EAAE,KAA9C;AAAqDE,QAAAA,UAAU,EAAE;AAAjE,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKrB,KAAL,CAAWC,WAAX,CAAuBU,GAAvB,CAA2B,CAACC,CAAD,EAAIe,CAAJ,KAAU;AAClC,UAAGf,CAAC,CAACC,QAAL,EAAc;AACZ,4BAAO,oBAAC,cAAD;AAAgB,UAAA,GAAG,EAAEc,CAArB;AAAwB,UAAA,MAAM,EAAEf,CAAC,CAACgB,MAAlC;AAA0C,UAAA,IAAI,EAAEhB,CAAC,CAACE,IAAlD;AAAwD,UAAA,IAAI,EAAEF,CAAC,CAACiB,IAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AACJ,KAJA,CADL,CADF,CADF,CANA,CADJ,CADA;AAqBE;;AA/C+B;;AAkDrC,eAAe9B,YAAf","sourcesContent":["import React, { Component } from 'react'\nimport VideoComponent from './VideoComponent'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport MainFeed from './mainFeed'\n\nconst Axios = require('axios')\n\nclass CameraLayout extends Component {\n\n    state = {\n        camerasList: [],\n        cameraNames: []\n    }\n    \n    componentDidMount(){\n        // get all current cameras in the DB and \n        const getCameras = async() => {\n            let result = await Axios.get('/api/cameras/getCameras')\n            console.log(result)\n            this.setState({camerasList: result.data})\n            this.setState({cameraNames: result.data.map((d) => {\n              if(d.isActive){\n                return d.name\n            }\n              })})\n        }\n        getCameras()\n    }\n\n    render(){\n\n    let scrollSideStyle = {height:'610px', color: '#000A40', width: '400px', position: 'absolute', marginLeft: '140px', overflow: 'scroll', textAlign: 'center'}\n\n    return(\n    <div style={{width: '100%', height: '700px', color: '#000A40'}}>\n        <Grid container spacing={3}>\n        <Grid item xs={6}>\n          <Paper style={{width:'700px', height:'600px' ,marginRight: '400px', backgroundColor: '#F6F7F8'}}>\n            <MainFeed name={\"Main Entrance\"} buttonNames={this.state.cameraNames}/>\n          </Paper>\n        </Grid>\n        <Grid item xs={6}>\n          <div style={scrollSideStyle}>\n            <div style={{gridTemplateRows: 'repeat(6, 325px)', width: '30%', marginLeft: '50px'}}>\n                {this.state.camerasList.map((d, i) => {\n                    if(d.isActive){\n                      return(<VideoComponent key={i} source={d.source} name={d.name} port={d.port}></VideoComponent>)\n                    }\n                })}\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n    )}\n}\n\nexport default CameraLayout"]},"metadata":{},"sourceType":"module"}