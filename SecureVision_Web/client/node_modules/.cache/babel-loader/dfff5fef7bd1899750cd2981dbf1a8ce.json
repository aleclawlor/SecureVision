{"ast":null,"code":"var _jsxFileName = \"/Users/aleclawlor/SecureVision/client/src/components/dailyActivity/activityLayout.js\";\nimport React, { Component } from 'react';\nimport TableFixedHeader from './completeLog';\nimport Snackbar from '../snackbar/snackbar';\n\nconst Axios = require('axios');\n\nclass activityLayout extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataList: []\n    };\n\n    this.refresh = async () => {\n      let data = await Axios.get('/api/lpr/getGeneralData');\n      let rawData = data.data;\n      console.log(rawData);\n      let sorted = rawData.sort((a, b) => a.date < b.date ? 1 : a.date === b.date ? a.time < b.time ? 1 : -1 : -1);\n      let newPlates = this.state.dataList.filter(item => !sorted.includes(item));\n      console.log(newPlates);\n      this.setState({\n        dataList: sorted\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.refresh();\n    this.intervalId = setInterval(this.refresh, 1000);\n  }\n\n  componentWillMount() {\n    clearInterval(this.intervalId);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(TableFixedHeader, {\n      dataList: this.state.dataList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default activityLayout;","map":{"version":3,"sources":["/Users/aleclawlor/SecureVision/client/src/components/dailyActivity/activityLayout.js"],"names":["React","Component","TableFixedHeader","Snackbar","Axios","require","activityLayout","state","dataList","refresh","data","get","rawData","console","log","sorted","sort","a","b","date","time","newPlates","filter","item","includes","setState","componentDidMount","intervalId","setInterval","componentWillMount","clearInterval","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,gBAAP,MAA6B,eAA7B;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AAEA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAMC,cAAN,SAA6BL,SAA7B,CAAsC;AAAA;AAAA;AAAA,SAIpCM,KAJoC,GAI5B;AACNC,MAAAA,QAAQ,EAAE;AADJ,KAJ4B;;AAAA,SAQpCC,OARoC,GAQ1B,YAAW;AACnB,UAAIC,IAAI,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,yBAAV,CAAjB;AACA,UAAIC,OAAO,GAAGF,IAAI,CAACA,IAAnB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,UAAIG,MAAM,GAAGH,OAAO,CAACI,IAAR,CAAa,CAACC,CAAD,EAAGC,CAAH,KAAUD,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAZ,GAAoB,CAApB,GAAwBF,CAAC,CAACE,IAAF,KAAWD,CAAC,CAACC,IAAd,GAAwBF,CAAC,CAACG,IAAF,GAASF,CAAC,CAACE,IAAZ,GAAoB,CAApB,GAAwB,CAAC,CAAhD,GAAoD,CAAC,CAAlG,CAAb;AAEA,UAAIC,SAAS,GAAG,KAAKd,KAAL,CAAWC,QAAX,CAAoBc,MAApB,CAA2BC,IAAI,IAAI,CAACR,MAAM,CAACS,QAAP,CAAgBD,IAAhB,CAApC,CAAhB;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAYO,SAAZ;AAEA,WAAKI,QAAL,CAAc;AAACjB,QAAAA,QAAQ,EAAEO;AAAX,OAAd;AACD,KAlBmC;AAAA;;AAoBpCW,EAAAA,iBAAiB,GAAE;AACjB,SAAKjB,OAAL;AACA,SAAKkB,UAAL,GAAkBC,WAAW,CAAC,KAAKnB,OAAN,EAAe,IAAf,CAA7B;AACD;;AAEDoB,EAAAA,kBAAkB,GAAE;AAChBC,IAAAA,aAAa,CAAC,KAAKH,UAAN,CAAb;AACH;;AAGDI,EAAAA,MAAM,GAAE;AACN,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,gBAAD;AAAkB,MAAA,QAAQ,EAAE,KAAKxB,KAAL,CAAWC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKC;;AApCiC;;AAuCtC,eAAeF,cAAf","sourcesContent":["import React, {Component} from 'react'\nimport TableFixedHeader from './completeLog'\nimport Snackbar from '../snackbar/snackbar'\n\nconst Axios = require('axios')\n\nclass activityLayout extends Component{\n\n  intervalId\n\n  state = {\n    dataList: []\n  }\n\n  refresh = async() => {\n    let data = await Axios.get('/api/lpr/getGeneralData')\n    let rawData = data.data\n    console.log(rawData)\n    let sorted = rawData.sort((a,b) => (a.date < b.date) ? 1: (a.date === b.date) ? ((a.time < b.time) ? 1 : -1): -1)\n\n    let newPlates = this.state.dataList.filter(item => !sorted.includes(item))\n    console.log(newPlates)\n\n    this.setState({dataList: sorted})\n  }\n\n  componentDidMount(){\n    this.refresh()\n    this.intervalId = setInterval(this.refresh, 1000)\n  }\n\n  componentWillMount(){\n      clearInterval(this.intervalId)\n  }\n\n\n  render(){\n    return(\n        <div>\n            <TableFixedHeader dataList={this.state.dataList}/>\n        </div>\n       )\n    }\n}\n\nexport default activityLayout"]},"metadata":{},"sourceType":"module"}