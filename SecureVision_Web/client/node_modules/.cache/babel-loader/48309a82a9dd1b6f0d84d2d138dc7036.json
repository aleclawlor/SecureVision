{"ast":null,"code":"import _slicedToArray from \"/Users/aleclawlor/SecureVision/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/aleclawlor/SecureVision/client/src/components/unrecognizedActivity/unrecognizedTable.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button'; // add columns for number of visits and criminal record\n\nconst columns = [{\n  id: 'number',\n  label: 'Plate Number',\n  minWidth: 100\n}, {\n  id: 'location',\n  label: 'Location',\n  minWidth: 170,\n  align: 'left',\n  format: value => value.toFixed(2)\n}, {\n  id: 'recognitions',\n  label: 'Recognitions',\n  minWidth: 130,\n  align: 'left',\n  format: value => value.toLocaleString()\n}, {\n  id: 'time',\n  label: 'Time Entered',\n  minWidth: 170,\n  align: 'left',\n  format: value => value.toLocaleString()\n}, {\n  id: 'date',\n  label: 'Date',\n  minWidth: 170,\n  align: 'left',\n  format: value => value.toLocaleString()\n}];\n\nfunction createData(number, location, recognitions, time, date) {\n  return {\n    number,\n    location,\n    recognitions,\n    time,\n    date\n  };\n}\n\nconst rows = [// on an interval of time, get the data from the database and map it to the table\n// plate number, recognized status, date, time entered, status\ncreateData(123456, 'Front Entrance', 1, '2:50pm', '4/1/20'), createData(789101, 'Back Parking Lot', 2, '1:11pm', '4/1/20'), createData(333333, 'Side Entrance', 1, '12:50pm', '4/1/20'), createData(100000, 'Back Parking Lot', 1, '12:00pm', '4/1/20'), createData(101010, 'Front Entrance', 1, '10:00am', '4/1/20'), createData(104050, 'Front Entrance', 1, '9:55am', '4/1/20'), createData(100000, 'Back Parking Lot', 3, '12:00pm', '4/1/20'), createData(100000, 'Back Parking Lot', 4, '12:00pm', '4/1/20'), createData(100000, 'Back Parking Lot', 5, '12:00pm', '4/1/20'), createData(100000, 'Back Parking Lot', 3, '12:00pm', '4/1/20'), createData(100000, 'Back Parking Lot', 2, '12:00pm', '4/1/20'), createData(100000, 'Back Parking Lot', 1, '12:00pm', '4/1/20')];\nconst useStyles = makeStyles({\n  root: {\n    backgroundColor: '#E5E5E5',\n    color: '#E5E5E5',\n    width: '100%',\n    height: '200%'\n  },\n  container: {\n    backgroundColor: '#E5E5E5',\n    maxHeight: 580\n  }\n});\nexport default function StickyHeadTable(props) {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        page = _React$useState2[0],\n        setPage = _React$useState2[1];\n\n  const _React$useState3 = React.useState(10),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        rowsPerPage = _React$useState4[0],\n        setRowsPerPage = _React$useState4[1];\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(TableContainer, {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    style: {\n      backgroundColor: '#E5E5E5'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, columns.map(column => React.createElement(TableCell, {\n    key: column.id,\n    align: column.align,\n    style: {\n      minWidth: column.minWidth\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, column.label)))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"return (\", React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), \")\", props.dataList.map((d, i) => {\n    return React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, d.plateNumber), React.createElement(TableCell, {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, d.location), React.createElement(TableCell, {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }));\n  })))), React.createElement(TablePagination, {\n    rowsPerPageOptions: [10, 25, 100],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      marginTop: '25px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    style: {\n      color: '#333'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"Sort By: \"), React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"Most Recent\"), React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Most Frequent\")));\n}","map":{"version":3,"sources":["/Users/aleclawlor/SecureVision/client/src/components/unrecognizedActivity/unrecognizedTable.js"],"names":["React","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Button","columns","id","label","minWidth","align","format","value","toFixed","toLocaleString","createData","number","location","recognitions","time","date","rows","useStyles","root","backgroundColor","color","width","height","container","maxHeight","StickyHeadTable","props","classes","useState","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","map","column","dataList","d","i","plateNumber","length","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button'\n\n// add columns for number of visits and criminal record\nconst columns = [\n  { id: 'number', label: 'Plate Number', minWidth: 100 },\n  {\n  id: 'location',\n  label: 'Location',\n  minWidth: 170,\n  align: 'left',\n  format: (value) => value.toFixed(2),\n},\n{\n  id: 'recognitions',\n  label: 'Recognitions',\n  minWidth: 130,\n  align: 'left',\n  format: (value) => value.toLocaleString(),\n},\n  {\n    id: 'time',\n    label: 'Time Entered',\n    minWidth: 170,\n    align: 'left',\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: 'date',\n    label: 'Date',\n    minWidth: 170,\n    align: 'left',\n    format: (value) => value.toLocaleString(),\n  },\n];\n\nfunction createData(number, location, recognitions, time, date) {\n  return { number, location, recognitions, time, date};\n}\n\nconst rows = [\n  // on an interval of time, get the data from the database and map it to the table\n\n  // plate number, recognized status, date, time entered, status\n  createData(123456, 'Front Entrance', 1, '2:50pm', '4/1/20'),\n  createData(789101, 'Back Parking Lot', 2, '1:11pm','4/1/20'),\n  createData(333333, 'Side Entrance', 1, '12:50pm','4/1/20'),\n  createData(100000, 'Back Parking Lot', 1, '12:00pm','4/1/20'),\n  createData(101010, 'Front Entrance', 1,'10:00am','4/1/20'),\n  createData(104050, 'Front Entrance', 1,'9:55am','4/1/20'),\n  createData(100000, 'Back Parking Lot', 3,'12:00pm','4/1/20'),\n  createData(100000, 'Back Parking Lot', 4,'12:00pm','4/1/20'),\n  createData(100000, 'Back Parking Lot', 5,'12:00pm','4/1/20'),\n  createData(100000, 'Back Parking Lot', 3,'12:00pm','4/1/20'),\n  createData(100000, 'Back Parking Lot', 2,'12:00pm','4/1/20'),\n  createData(100000, 'Back Parking Lot', 1,'12:00pm','4/1/20'),\n];\n\nconst useStyles = makeStyles({\n  root: {\n    backgroundColor: '#E5E5E5',\n    color: '#E5E5E5',\n    width: '100%',\n    height: '200%'\n  },\n  container: {\n    backgroundColor: '#E5E5E5',\n    maxHeight: 580,\n  },\n});\n\nexport default function StickyHeadTable(props) {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead style={{backgroundColor: '#E5E5E5'}}>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            return (<TableRow ></TableRow>)\n            {/* {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n              return (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} >\n                  {columns.map((column) => {\n                    const value = row[column.id];\n                    return (\n                      <TableCell key={column.id} align={column.align}>\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })} */}\n            {props.dataList.map((d, i) => {\n              return (\n              <TableRow>\n                  <TableCell component=\"th\" scope=\"row\">{d.plateNumber}</TableCell>\n                  <TableCell align=\"left\">{d.location}</TableCell>\n                <TableCell align=\"left\"></TableCell>\n              </TableRow>\n            )\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n      <div style={{width: '100%', marginTop: '25px'}}>\n        <strong style={{color: '#333'}}>Sort By: </strong>\n      <Button>Most Recent</Button>\n      <Button>Most Frequent</Button>\n      </div>\n    </Paper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}