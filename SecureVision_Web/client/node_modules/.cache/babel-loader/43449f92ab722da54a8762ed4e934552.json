{"ast":null,"code":"var _jsxFileName = \"/Users/aleclawlor/SecureVision/client/src/components/cameraFeed/mainFeed.js\";\nimport React, { Component } from 'react';\nimport ReactPlayer from 'react-player';\nimport { Button } from '@material-ui/core';\n\nconst Axios = require('axios');\n\nconst primaryColor = '#2D2D2D';\nconst accentColor = '#1C63CD'; // component to hold the primary video being shown \n\nclass MainFeed extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      source: this.props.source,\n      name: this.props.name,\n      port: this.props.port,\n      buttonNames: this.props.buttonNames,\n      finished: false,\n      source: 'https://www.youtube.com/embed/OOPWzhFnCZg',\n      // TODO: change to first camera in cameras list from DB \n      header: 'Default Feed'\n    };\n\n    this.handleChange = (name, source) => {\n      this.setState({\n        header: name,\n        source: source\n      });\n    };\n  }\n\n  // once the component mounts, get all the school-specific cameras from the DB \n  componentDidMount() {\n    const getCameras = async () => {\n      const schoolID = JSON.parse(localStorage.getItem('userObj'))._id;\n\n      let result = await Axios.get('/api/cameras/getCameras');\n      this.setState({\n        buttonNames: result.data.map((d, i) => {\n          if (d.isActive && d.schoolID === schoolID) {\n            return /*#__PURE__*/React.createElement(Button, {\n              key: i,\n              onClick: () => {\n                this.handleChange(d.name, d.source);\n              },\n              style: {\n                height: '80px',\n                color: primaryColor,\n                fontWeight: 550\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 22\n              }\n            }, d.name);\n          }\n        })\n      });\n    };\n\n    getCameras();\n  }\n\n  render() {\n    const player = {\n      marginTop: '5px'\n    };\n    const buttonGridStyle = {\n      width: '100%',\n      textAlign: 'left',\n      overflow: 'scroll'\n    };\n    const buttons = {\n      marginLeft: '15px',\n      width: '102%',\n      color: primaryColor,\n      overflow: 'hidden',\n      fontWeight: 550\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '700px',\n        height: '420px',\n        backgroundColor: '#F6F7F8'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ReactPlayer, {\n      url: this.state.source,\n      playing: true,\n      muted: true,\n      controls: false,\n      className: player,\n      width: \"100%\",\n      height: \"100%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: '15px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        marginLeft: '15px',\n        color: primaryColor\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    }, this.state.header)), /*#__PURE__*/React.createElement(\"div\", {\n      style: buttonGridStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: buttons,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, this.state.buttonNames.map(d => {\n      return d;\n    })))));\n  }\n\n}\n\nexport default MainFeed;","map":{"version":3,"sources":["/Users/aleclawlor/SecureVision/client/src/components/cameraFeed/mainFeed.js"],"names":["React","Component","ReactPlayer","Button","Axios","require","primaryColor","accentColor","MainFeed","state","source","props","name","port","buttonNames","finished","header","handleChange","setState","componentDidMount","getCameras","schoolID","JSON","parse","localStorage","getItem","_id","result","get","data","map","d","i","isActive","height","color","fontWeight","render","player","marginTop","buttonGridStyle","width","textAlign","overflow","buttons","marginLeft","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ReactPlayer from 'react-player'\nimport { Button } from '@material-ui/core'\n\nconst Axios = require('axios')\n\nconst primaryColor = '#2D2D2D'\nconst accentColor = '#1C63CD'\n\n// component to hold the primary video being shown \nclass MainFeed extends Component{\n\n  state = {\n          source: this.props.source,\n          name: this.props.name,\n          port: this.props.port,\n          buttonNames: this.props.buttonNames,\n          finished: false,\n          source: 'https://www.youtube.com/embed/OOPWzhFnCZg',  // TODO: change to first camera in cameras list from DB \n          header: 'Default Feed'\n    }  \n\n    // change the camera feed shown in the primary camera box \n    handleChange = (name, source) => {\n      this.setState({header: name, source: source})\n    }\n\n    // once the component mounts, get all the school-specific cameras from the DB \n    componentDidMount(){\n        \n        const getCameras = async() => {\n\n          const schoolID = JSON.parse(localStorage.getItem('userObj'))._id\n\n          let result = await Axios.get('/api/cameras/getCameras')\n          this.setState({buttonNames: result.data.map((d, i) => {\n            if(d.isActive && d.schoolID === schoolID){\n              return <Button key={i} onClick={() => {this.handleChange(d.name, d.source)}} style={{height: '80px', color: primaryColor, fontWeight: 550}}>{d.name}</Button>\n            }\n          })})\n      }\n\n    getCameras()\n\n    }\n\n    render(){\n\n\n        const player = {\n            marginTop: '5px'\n        }\n\n        const buttonGridStyle={\n            width: '100%',\n            textAlign:'left',\n            overflow: 'scroll'\n        }\n\n        const buttons = {\n            marginLeft: '15px', \n            width: '102%',\n            color: primaryColor,\n            overflow: 'hidden',\n            fontWeight: 550\n        }\n\n        return(\n            <div>\n                <div style={{width: '700px', height: '420px', backgroundColor: '#F6F7F8'}}>\n                    <ReactPlayer url={this.state.source} playing muted controls={false} className={player} width=\"100%\" height=\"100%\"/>\n                    <div style={{marginTop: '15px'}}>\n                        <h1 style={{marginLeft: '15px', color: primaryColor}}>{this.state.header}</h1>\n                    </div>\n                    <div style={buttonGridStyle}>\n                        <div style={buttons}>\n                            {this.state.buttonNames.map((d) => {\n                              return d\n                            })}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default MainFeed"]},"metadata":{},"sourceType":"module"}