{"ast":null,"code":"var _jsxFileName = \"/Users/aleclawlor/SecureVision/client/src/components/activePlatesFeed/activePlates.js\";\nimport React, { Component } from 'react';\nimport FeedItem from './plateFeedItem';\nimport Axios from 'axios';\nimport SearchBar from '../AutoComplete/search';\nimport { TextField } from '@material-ui/core'; // import Search from './autoCompSearch'\n\nlet FeedStyle = {\n  overflow: 'scroll'\n};\n\nclass platesFeed extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      plateCollection: [],\n      feed: [],\n      searchVal: ''\n    };\n\n    this.getRegisterData = async () => {\n      let getData = await Axios.get('/api/get/getPlates');\n      let plateData = getData.data;\n      console.log(\"Plate list:\", plateData);\n      this.setState({\n        plateCollection: plateData\n      });\n    };\n\n    this.updateSearchVal = event => {\n      this.setState({\n        searchVal: event.target.value\n      });\n    };\n\n    this.updateFeedList = async () => {\n      console.log(this.state.plateCollection);\n      let feed = [];\n      this.state.plateCollection.map((plate, i) => {\n        if (plate.isActive) {\n          feed.push(React.createElement(FeedItem, {\n            plateNumber: plate.plateNumber,\n            studentName: plate.studentName,\n            parentName: plate.parentName,\n            id: plate._id,\n            key: i,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          }));\n        }\n      });\n      this.setState({\n        feed: feed\n      });\n    };\n  }\n\n  async componentDidMount() {\n    await this.getRegisterData();\n    await this.updateFeedList();\n    console.log(this.state, 'component mounted');\n  }\n\n  render() {\n    let parentNames = this.state.feed.map(plates => {\n      return plates.props.parentName;\n    });\n    let filteredFeed = this.state.feed.filter(plate => {\n      return parentNames.indexOf(this.state.searchVal) !== -1;\n    });\n\n    if (this.state.searchVal === '') {\n      filteredFeed = this.state.feed;\n    }\n\n    console.log(\"Filtered:\", filteredFeed);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Active Plates\"), React.createElement(TextField, {\n      variant: \"outlined\",\n      onChange: this.updateSearchVal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: FeedStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, filteredFeed));\n  }\n\n}\n\nexport default platesFeed;","map":{"version":3,"sources":["/Users/aleclawlor/SecureVision/client/src/components/activePlatesFeed/activePlates.js"],"names":["React","Component","FeedItem","Axios","SearchBar","TextField","FeedStyle","overflow","platesFeed","state","plateCollection","feed","searchVal","getRegisterData","getData","get","plateData","data","console","log","setState","updateSearchVal","event","target","value","updateFeedList","map","plate","i","isActive","push","plateNumber","studentName","parentName","_id","componentDidMount","render","parentNames","plates","props","filteredFeed","filter","indexOf"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,SAAT,QAA0B,mBAA1B,C,CACA;;AAEA,IAAIC,SAAS,GAAG;AACbC,EAAAA,QAAQ,EAAE;AADG,CAAhB;;AAIA,MAAMC,UAAN,SAAyBP,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAE/BQ,KAF+B,GAEvB;AACJC,MAAAA,eAAe,EAAE,EADb;AAEJC,MAAAA,IAAI,EAAE,EAFF;AAGJC,MAAAA,SAAS,EAAE;AAHP,KAFuB;;AAAA,SAQ/BC,eAR+B,GAQZ,YAAW;AAC1B,UAAIC,OAAO,GAAI,MAAMX,KAAK,CAACY,GAAN,CAAU,oBAAV,CAArB;AAEA,UAAIC,SAAS,GAAGF,OAAO,CAACG,IAAxB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,SAA3B;AAEA,WAAKI,QAAL,CAAc;AAACV,QAAAA,eAAe,EAAEM;AAAlB,OAAd;AACH,KAf8B;;AAAA,SAiB/BK,eAjB+B,GAiBZC,KAAD,IAAW;AACzB,WAAKF,QAAL,CAAc;AAACR,QAAAA,SAAS,EAAEU,KAAK,CAACC,MAAN,CAAaC;AAAzB,OAAd;AACH,KAnB8B;;AAAA,SAqB/BC,cArB+B,GAqBd,YAAW;AACxBP,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWC,eAAvB;AACA,UAAIC,IAAI,GAAG,EAAX;AACA,WAAKF,KAAL,CAAWC,eAAX,CAA2BgB,GAA3B,CAA+B,CAACC,KAAD,EAAQC,CAAR,KAAc;AACzC,YAAGD,KAAK,CAACE,QAAT,EAAkB;AAClBlB,UAAAA,IAAI,CAACmB,IAAL,CAAU,oBAAC,QAAD;AACN,YAAA,WAAW,EAAIH,KAAK,CAACI,WADf;AAEN,YAAA,WAAW,EAAIJ,KAAK,CAACK,WAFf;AAGN,YAAA,UAAU,EAAIL,KAAK,CAACM,UAHd;AAIN,YAAA,EAAE,EAAIN,KAAK,CAACO,GAJN;AAKN,YAAA,GAAG,EAAIN,CALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAV;AAMI;AACP,OATD;AAUA,WAAKR,QAAL,CAAc;AAACT,QAAAA,IAAI,EAAEA;AAAP,OAAd;AACH,KAnC8B;AAAA;;AAqC/B,QAAMwB,iBAAN,GAAyB;AACrB,UAAM,KAAKtB,eAAL,EAAN;AACA,UAAM,KAAKY,cAAL,EAAN;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAjB,EAAwB,mBAAxB;AACH;;AAED2B,EAAAA,MAAM,GAAE;AAEJ,QAAIC,WAAW,GAAG,KAAK5B,KAAL,CAAWE,IAAX,CAAgBe,GAAhB,CAAqBY,MAAD,IAAY;AAC9C,aAAOA,MAAM,CAACC,KAAP,CAAaN,UAApB;AACH,KAFiB,CAAlB;AAIA,QAAIO,YAAY,GAAG,KAAK/B,KAAL,CAAWE,IAAX,CAAgB8B,MAAhB,CAAwBd,KAAD,IAAW;AACjD,aAAOU,WAAW,CAACK,OAAZ,CAAoB,KAAKjC,KAAL,CAAWG,SAA/B,MAA8C,CAAC,CAAtD;AACH,KAFkB,CAAnB;;AAIA,QAAG,KAAKH,KAAL,CAAWG,SAAX,KAAyB,EAA5B,EAA+B;AAC3B4B,MAAAA,YAAY,GAAG,KAAK/B,KAAL,CAAWE,IAA1B;AACH;;AAEDO,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBqB,YAAzB;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAC,UAAnB;AAA8B,MAAA,QAAQ,EAAE,KAAKnB,eAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAK,MAAA,KAAK,EAAEf,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKkC,YADL,CAHJ,CADJ;AASH;;AApE8B;;AAuEnC,eAAehC,UAAf","sourcesContent":["import React, { Component } from 'react'\nimport FeedItem from './plateFeedItem'\nimport Axios from 'axios'\nimport SearchBar from '../AutoComplete/search'\nimport { TextField } from '@material-ui/core'\n// import Search from './autoCompSearch'\n\nlet FeedStyle = {\n   overflow: 'scroll'\n}\n\nclass platesFeed extends Component {\n\n    state = {\n        plateCollection: [],\n        feed: [],\n        searchVal: ''\n    }\n    \n    getRegisterData  = async() => { \n        let getData =  await Axios.get('/api/get/getPlates')\n\n        let plateData = getData.data\n        console.log(\"Plate list:\", plateData)\n\n        this.setState({plateCollection: plateData})\n    }\n\n    updateSearchVal = (event) => {\n        this.setState({searchVal: event.target.value})\n    }\n\n    updateFeedList = async() => {\n        console.log(this.state.plateCollection)\n        let feed = []\n        this.state.plateCollection.map((plate, i) => {\n            if(plate.isActive){\n            feed.push(<FeedItem\n                plateNumber = {plate.plateNumber}\n                studentName = {plate.studentName}\n                parentName = {plate.parentName}\n                id = {plate._id}\n                key = {i} \n            />)}\n        })\n        this.setState({feed: feed})\n    }\n\n    async componentDidMount(){\n        await this.getRegisterData()\n        await this.updateFeedList()\n        console.log(this.state, 'component mounted')\n    }\n\n    render(){\n\n        let parentNames = this.state.feed.map((plates) => {\n            return plates.props.parentName\n        })\n\n        let filteredFeed = this.state.feed.filter((plate) => {\n            return parentNames.indexOf(this.state.searchVal) !== -1\n        })\n\n        if(this.state.searchVal === ''){\n            filteredFeed = this.state.feed\n        }\n\n        console.log(\"Filtered:\", filteredFeed)\n        \n        return(\n            <div>\n                <h1>Active Plates</h1>\n                <TextField variant=\"outlined\" onChange={this.updateSearchVal}></TextField>\n                <div style={FeedStyle}>\n                    {filteredFeed}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default platesFeed"]},"metadata":{},"sourceType":"module"}