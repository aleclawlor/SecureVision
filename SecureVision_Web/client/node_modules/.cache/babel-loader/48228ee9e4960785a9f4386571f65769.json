{"ast":null,"code":"var _jsxFileName = \"/Users/aleclawlor/SecureVision/client/src/components/unrecognizedActivity/unrecognizedDashboard.js\";\nimport React, { Component } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport UnrecognizedTable from './unrecognizedTable';\n\nconst Axios = require('axios');\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  chart: {\n    width: '125%',\n    height: '300px'\n  },\n  heatmap: {\n    padding: theme.spacing(2),\n    width: '75%',\n    marginLeft: '25%',\n    height: '310px'\n  },\n  timePlot: {\n    marginTop: '30px',\n    padding: theme.spacing(2),\n    width: '75%',\n    marginLeft: '25%',\n    height: '310px'\n  }\n}));\n\nclass MyGrid extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataList: []\n    };\n\n    this.refresh = async () => {\n      let data = await Axios.get('/api/lpr/getUnrecognizedData');\n      let rawData = data.data;\n      console.log(rawData);\n      let sorted = rawData.sort((a, b) => a.date < b.date && a.time > b.time ? 1 : -1);\n      this.setState({\n        dataList: sorted\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.intervalId = setInterval(this.refresh, 1000);\n  }\n\n  componentWillMount() {\n    clearInterval(this.intervalId);\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.chart,\n      style: {\n        width: '200%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(UnrecognizedTable, {\n      dataList: this.state.dataList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withStyles(useStyles)(MyGrid);","map":{"version":3,"sources":["/Users/aleclawlor/SecureVision/client/src/components/unrecognizedActivity/unrecognizedDashboard.js"],"names":["React","Component","makeStyles","withStyles","Paper","Grid","UnrecognizedTable","Axios","require","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","chart","width","height","heatmap","marginLeft","timePlot","marginTop","MyGrid","state","dataList","refresh","data","get","rawData","console","log","sorted","sort","a","b","date","time","setState","componentDidMount","intervalId","setInterval","componentWillMount","clearInterval","render","classes","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport UnrecognizedTable from './unrecognizedTable'\n\n\nconst Axios = require('axios')\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  chart: {\n      width: '125%',\n      height: '300px'\n  },\n  heatmap: {\n      padding: theme.spacing(2),\n      width: '75%',\n      marginLeft: '25%',\n      height: '310px'\n  },\n  timePlot: {\n    marginTop: '30px',\n    padding: theme.spacing(2),\n    width: '75%',\n    marginLeft: '25%',\n    height: '310px'\n  }\n}));\n\nclass MyGrid extends Component {\n\n  intervalId\n\n  state = {\n    dataList: []\n  }\n\n  refresh = async() => {\n    let data = await Axios.get('/api/lpr/getUnrecognizedData')\n    \n    let rawData = data.data\n    console.log(rawData)\n    let sorted = rawData.sort((a,b) => (a.date < b.date && a.time > b.time) ? 1 : -1)\n\n    this.setState({dataList: sorted})\n  }\n\n  componentDidMount(){\n    this.intervalId = setInterval(this.refresh, 1000)\n  }\n\n  componentWillMount(){\n    clearInterval(this.intervalId)\n  }\n\n  render(){\n  const {classes} = this.props;\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={6}>\n          <Paper className={classes.chart} style={{width: '200%'}}>\n              <UnrecognizedTable dataList = {this.state.dataList}/>\n          </Paper>\n        </Grid>\n        <Grid item xs={6}>\n          {/* <Paper className={classes.heatmap} style={{backgroundColor: '#E5E5E5', width: '75%', height: '330px',marginLeft: '25%'}}>\n              Chart showing the areas with the most unrecognized plate\n          </Paper>\n          <Paper className={classes.timePlot} style={{backgroundColor: '#E5E5E5', width: '75%', height: '330px',marginLeft: '25%', marginTop: '30px'}}>\n              Chart showing activity over time\n          </Paper> */}\n        </Grid>\n      </Grid>\n    </div>\n  )};\n}\n\nexport default withStyles(useStyles)(MyGrid)"]},"metadata":{},"sourceType":"module"}