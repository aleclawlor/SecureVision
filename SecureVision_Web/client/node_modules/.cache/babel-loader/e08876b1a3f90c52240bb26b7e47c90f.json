{"ast":null,"code":"var _jsxFileName = \"/Users/aleclawlor/SecureVision/client/src/components/dailyActivity/activityLayout.js\";\nimport React, { Component } from 'react';\nimport TableFixedHeader from './completeLog';\nimport Snackbar from '../snackbar/snackbar';\n\nconst Axios = require('axios');\n\nclass activityLayout extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataList: [],\n      highRiskAlert: null\n    };\n\n    this.refresh = async () => {\n      let data = await Axios.get('/api/lpr/getGeneralData');\n      let rawData = data.data;\n      let sorted = rawData.sort((a, b) => a.date < b.date ? 1 : a.date === b.date ? a.time < b.time ? 1 : -1 : -1);\n      let currentList = this.state.dataList;\n      let newPlates = sorted.filter(item => !currentList.includes(item));\n\n      if (currentList.length != sorted.length && currentList.length != 0) {\n        newPlates.forEach(plate => {\n          if (plate.type !== 'Parent') {\n            this.setState({\n              dataList: sorted,\n              highRiskAlert: null\n            });\n            console.log(\"Trigger the snack bar\");\n            this.setState({\n              highRiskAlert: React.createElement(Snackbar, {\n                shouldOpen: this.state.shouldAlert,\n                message: [React.createElement(\"span\", {\n                  style: {\n                    fontSize: '24px',\n                    marginBottom: '25px',\n                    color: ''\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 37\n                  },\n                  __self: this\n                }, \"High Risk Plate Detected\"), React.createElement(\"br\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 38\n                  },\n                  __self: this\n                }), React.createElement(\"br\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 38\n                  },\n                  __self: this\n                }), React.createElement(\"span\", {\n                  style: {\n                    fontSize: '20px',\n                    marginBottom: '15px'\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 39\n                  },\n                  __self: this\n                }, \"Plate: \", mostRecent.plateNumber), React.createElement(\"br\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 40\n                  },\n                  __self: this\n                }), React.createElement(\"span\", {\n                  style: {\n                    fontSize: '20px',\n                    marginBottom: '15px'\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 41\n                  },\n                  __self: this\n                }, \"Threat Type: \", mostRecent.type), React.createElement(\"br\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 42\n                  },\n                  __self: this\n                }), React.createElement(\"span\", {\n                  style: {\n                    fontSize: '20px',\n                    marginBottom: '15px'\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 43\n                  },\n                  __self: this\n                }, \"Location: \", mostRecent.location)],\n                activate: true,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 34\n                },\n                __self: this\n              }),\n              dataList: sorted\n            });\n            return;\n          }\n        });\n        const mostRecent = sorted[0]; // console.log(mostRecent)\n\n        return;\n      }\n\n      this.setState({\n        dataList: sorted,\n        highRiskAlert: null\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.refresh();\n    this.intervalId = setInterval(this.refresh, 6000);\n  }\n\n  componentWillMount() {\n    clearInterval(this.intervalId);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(TableFixedHeader, {\n      dataList: this.state.dataList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), this.state.highRiskAlert);\n  }\n\n}\n\nexport default activityLayout;","map":{"version":3,"sources":["/Users/aleclawlor/SecureVision/client/src/components/dailyActivity/activityLayout.js"],"names":["React","Component","TableFixedHeader","Snackbar","Axios","require","activityLayout","state","dataList","highRiskAlert","refresh","data","get","rawData","sorted","sort","a","b","date","time","currentList","newPlates","filter","item","includes","length","forEach","plate","type","setState","console","log","shouldAlert","fontSize","marginBottom","color","mostRecent","plateNumber","location","componentDidMount","intervalId","setInterval","componentWillMount","clearInterval","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport TableFixedHeader from './completeLog'\nimport Snackbar from '../snackbar/snackbar'\n\nconst Axios = require('axios')\n\nclass activityLayout extends Component{\n\n  intervalId\n\n  state = {\n    dataList: [],\n    highRiskAlert: null\n  }\n\n  refresh = async() => {\n    let data = await Axios.get('/api/lpr/getGeneralData')\n    let rawData = data.data\n   \n    let sorted = rawData.sort((a,b) => (a.date < b.date) ? 1: (a.date === b.date) ? ((a.time < b.time) ? 1 : -1): -1)\n\n    let currentList = this.state.dataList\n    let newPlates = sorted.filter(item => !currentList.includes(item))\n\n    if(currentList.length != sorted.length && currentList.length != 0){\n        \n        newPlates.forEach(plate => {\n            if (plate.type !== 'Parent'){\n              this.setState({dataList: sorted, highRiskAlert: null})\n              console.log(\"Trigger the snack bar\")\n              this.setState(\n                  {\n                  highRiskAlert: \n                  <Snackbar \n                      shouldOpen={this.state.shouldAlert} \n                      message={[\n                          <span style={{fontSize: '24px', marginBottom: '25px', color: ''}}>High Risk Plate Detected</span>,\n                          <br></br>,<br></br>,\n                          <span style={{fontSize: '20px', marginBottom: '15px'}}>Plate: {mostRecent.plateNumber}</span>,\n                          <br></br>,\n                          <span style={{fontSize: '20px', marginBottom: '15px'}}>Threat Type: {mostRecent.type}</span>,\n                          <br></br>,\n                          <span style={{fontSize: '20px', marginBottom: '15px'}}>Location: {mostRecent.location}</span>\n                      ]\n                      }\n                      activate={true}>\n                  </Snackbar>, dataList: sorted\n        })\n              return\n          }\n        })\n\n        const mostRecent = sorted[0]\n        // console.log(mostRecent)\n\n\n        return \n    }\n\n    this.setState({dataList: sorted, highRiskAlert: null})\n  }\n\n  componentDidMount(){\n    this.refresh()\n    this.intervalId = setInterval(this.refresh, 6000)\n  }\n\n  componentWillMount(){\n      clearInterval(this.intervalId)\n  }\n\n\n  render(){\n    return(\n        <div>\n            <TableFixedHeader dataList={this.state.dataList}/>\n            {this.state.highRiskAlert}\n        </div>\n       )\n    }\n}\n\nexport default activityLayout"]},"metadata":{},"sourceType":"module"}