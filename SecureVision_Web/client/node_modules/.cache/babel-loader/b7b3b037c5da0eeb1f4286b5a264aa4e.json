{"ast":null,"code":"import _slicedToArray from \"/Users/aleclawlor/SecureVision/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/aleclawlor/SecureVision/client/src/components/unrecognizedActivity/unrecognizedTable.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nconst columns = [{\n  id: 'number',\n  label: 'Plate Number',\n  minWidth: 100\n}, {\n  id: 'recognized',\n  label: 'Recognized Status',\n  minWidth: 150,\n  align: 'center'\n}, {\n  id: 'location',\n  label: 'Location',\n  minWidth: 170,\n  align: 'left',\n  format: value => value.toFixed(2)\n}, {\n  id: 'time',\n  label: 'Time Entered',\n  minWidth: 170,\n  align: 'left',\n  format: value => value.toLocaleString()\n}, {\n  id: 'date',\n  label: 'Date',\n  minWidth: 170,\n  align: 'left',\n  format: value => value.toLocaleString()\n}];\n\nfunction createData(number, recognized, location, time, date) {\n  return {\n    number,\n    recognized,\n    location,\n    time,\n    date\n  };\n}\n\nconst rows = [// on an interval of time, get the data from the database and map it to the table\n// plate number, recognized status, date, time entered, status\ncreateData(123456, React.createElement(\"i\", {\n  class: \"material-icons\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}, \"check_circle_outline\"), 'Front Entrance', '2:50pm', '4/1/20'), createData(789101, React.createElement(\"i\", {\n  class: \"material-icons\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n}, \"error_outline\"), 'Back Parking Lot', '1:11pm', '4/1/20'), createData(333333, React.createElement(\"i\", {\n  class: \"material-icons\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n}, \"error_outline\"), 'Side Entrance', '12:50pm', '4/1/20'), createData(100000, React.createElement(\"i\", {\n  class: \"material-icons\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n}, \"check_circle_outline\"), 'Back Parking Lot', '12:00pm', '4/1/20'), createData(101010, React.createElement(\"i\", {\n  class: \"material-icons\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50\n  },\n  __self: this\n}, \"check_circle_outline\"), 'Front Entrance', '10:00am', '4/1/20'), createData(104050, React.createElement(\"i\", {\n  class: \"material-icons\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n}, \"error_outline\"), 'Front Entrance', '9:55am', '4/1/20'), createData(100000, React.createElement(\"i\", {\n  class: \"material-icons\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52\n  },\n  __self: this\n}, \"check_circle_outline\"), 'Back Parking Lot', '12:00pm', '4/1/20'), createData(100000, React.createElement(\"i\", {\n  class: \"material-icons\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53\n  },\n  __self: this\n}, \"check_circle_outline\"), 'Back Parking Lot', '12:00pm', '4/1/20')];\nconst useStyles = makeStyles({\n  root: {\n    backgroundColor: '#E5E5E5',\n    color: '#E5E5E5',\n    width: '100%',\n    height: '175%'\n  },\n  container: {\n    backgroundColor: '#E5E5E5',\n    maxHeight: 540\n  }\n});\nexport default function StickyHeadTable() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        page = _React$useState2[0],\n        setPage = _React$useState2[1];\n\n  const _React$useState3 = React.useState(10),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        rowsPerPage = _React$useState4[0],\n        setRowsPerPage = _React$useState4[1];\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(TableContainer, {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    style: {\n      backgroundColor: '#E5E5E5'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, columns.map(column => React.createElement(TableCell, {\n    key: column.id,\n    align: column.align,\n    style: {\n      minWidth: column.minWidth\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, column.label)))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n    return React.createElement(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: row.code,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, columns.map(column => {\n      const value = row[column.id];\n      return React.createElement(TableCell, {\n        key: column.id,\n        align: column.align,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, column.format && typeof value === 'number' ? column.format(value) : value);\n    }));\n  })))), React.createElement(TablePagination, {\n    rowsPerPageOptions: [10, 25, 100],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/aleclawlor/SecureVision/client/src/components/unrecognizedActivity/unrecognizedTable.js"],"names":["React","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","columns","id","label","minWidth","align","format","value","toFixed","toLocaleString","createData","number","recognized","location","time","date","rows","useStyles","root","backgroundColor","color","width","height","container","maxHeight","StickyHeadTable","classes","useState","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","map","column","slice","row","code","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst columns = [\n  { id: 'number', label: 'Plate Number', minWidth: 100 },\n  { id: 'recognized', label: 'Recognized Status', minWidth: 150, align: 'center' },\n  {\n  id: 'location',\n  label: 'Location',\n  minWidth: 170,\n  align: 'left',\n  format: (value) => value.toFixed(2),\n},\n  {\n    id: 'time',\n    label: 'Time Entered',\n    minWidth: 170,\n    align: 'left',\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: 'date',\n    label: 'Date',\n    minWidth: 170,\n    align: 'left',\n    format: (value) => value.toLocaleString(),\n  },\n];\n\nfunction createData(number, recognized, location, time, date) {\n  return { number, recognized, location, time, date};\n}\n\nconst rows = [\n  // on an interval of time, get the data from the database and map it to the table\n\n  // plate number, recognized status, date, time entered, status\n  createData(123456, <i class=\"material-icons\">check_circle_outline</i>, 'Front Entrance', '2:50pm', '4/1/20'),\n  createData(789101, <i class=\"material-icons\">error_outline</i>, 'Back Parking Lot', '1:11pm', '4/1/20'),\n  createData(333333, <i class=\"material-icons\">error_outline</i>, 'Side Entrance', '12:50pm', '4/1/20'),\n  createData(100000, <i class=\"material-icons\">check_circle_outline</i>, 'Back Parking Lot', '12:00pm', '4/1/20'),\n  createData(101010, <i class=\"material-icons\">check_circle_outline</i>, 'Front Entrance', '10:00am', '4/1/20'),\n  createData(104050, <i class=\"material-icons\">error_outline</i>, 'Front Entrance', '9:55am', '4/1/20'),\n  createData(100000, <i class=\"material-icons\">check_circle_outline</i>, 'Back Parking Lot', '12:00pm', '4/1/20'),\n  createData(100000, <i class=\"material-icons\">check_circle_outline</i>, 'Back Parking Lot', '12:00pm', '4/1/20'),\n];\n\nconst useStyles = makeStyles({\n  root: {\n    backgroundColor: '#E5E5E5',\n    color: '#E5E5E5',\n    width: '100%',\n    height: '175%'\n  },\n  container: {\n    backgroundColor: '#E5E5E5',\n    maxHeight: 540,\n  },\n});\n\nexport default function StickyHeadTable() {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead style={{backgroundColor: '#E5E5E5'}}>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n              return (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                  {columns.map((column) => {\n                    const value = row[column.id];\n                    return (\n                      <TableCell key={column.id} align={column.align}>\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}