{"ast":null,"code":"var _jsxFileName = \"/Users/aleclawlor/SecureVision/client/src/components/cameraFeed/cameraLayout.js\";\nimport React, { Component } from 'react';\nimport VideoComponent from './VideoComponent';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport MainFeed from './mainFeed';\n\nconst Axios = require('axios');\n\nclass CameraLayout extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      camerasList: [],\n      cameraNames: []\n    };\n  }\n\n  componentDidMount() {\n    // get all current cameras in the DB and \n    const getCameras = async () => {\n      let result = await Axios.get('/api/cameras/getCameras');\n      console.log(result);\n      this.setState({\n        camerasList: result.data\n      });\n      this.setState({\n        cameraNames: result.data.map((d, i) => {\n          return d.name;\n        })\n      });\n    };\n\n    getCameras();\n  }\n\n  render() {\n    let scrollSideStyle = {\n      height: '700px',\n      width: '400px',\n      position: 'absolute',\n      marginLeft: '140px',\n      overflow: 'scroll',\n      textAlign: 'center'\n    };\n    console.log(this.state.cameraNames);\n    return React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        height: '700px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      style: {\n        width: '700px',\n        height: '700px',\n        marginRight: '400px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(MainFeed, {\n      name: \"Main Entrance\",\n      buttonNames: this.state.cameraNames,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: scrollSideStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        gridTemplateRows: 'repeat(3, 325px)',\n        width: '30%',\n        marginLeft: '50px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.state.camerasList.map((d, i) => {\n      return React.createElement(VideoComponent, {\n        key: i,\n        source: d.source,\n        name: d.name,\n        port: d.port,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      });\n    }))))));\n  }\n\n}\n\nexport default CameraLayout;","map":{"version":3,"sources":["/Users/aleclawlor/SecureVision/client/src/components/cameraFeed/cameraLayout.js"],"names":["React","Component","VideoComponent","Grid","Paper","MainFeed","Axios","require","CameraLayout","state","camerasList","cameraNames","componentDidMount","getCameras","result","get","console","log","setState","data","map","d","i","name","render","scrollSideStyle","height","width","position","marginLeft","overflow","textAlign","marginRight","gridTemplateRows","source","port"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport VideoComponent from './VideoComponent'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport MainFeed from './mainFeed'\n\nconst Axios = require('axios')\n\nclass CameraLayout extends Component {\n\n    state = {\n        camerasList: [],\n        cameraNames: []\n    }\n\n    componentDidMount(){\n        // get all current cameras in the DB and \n        const getCameras = async() => {\n            let result = await Axios.get('/api/cameras/getCameras')\n            console.log(result)\n            this.setState({camerasList: result.data})\n            this.setState({cameraNames: result.data.map((d, i) => {\n                return d.name\n            })})\n        }\n        getCameras()\n    }\n\n    render(){\n\n    let scrollSideStyle = {height:'700px', width: '400px', position: 'absolute', marginLeft: '140px', overflow: 'scroll', textAlign: 'center'}\n\n    console.log(this.state.cameraNames)\n    return(\n    <div style={{width: '100%', height: '700px'}}>\n        <Grid container spacing={3}>\n        <Grid item xs={6}>\n          <Paper style={{width:'700px', height:'700px' ,marginRight: '400px'}}>\n            <MainFeed name={\"Main Entrance\"} buttonNames={this.state.cameraNames}/>\n          </Paper>\n        </Grid>\n        <Grid item xs={6}>\n          <div style={scrollSideStyle}>\n            <div style={{gridTemplateRows: 'repeat(3, 325px)', width: '30%', marginLeft: '50px'}}>\n                {this.state.camerasList.map((d, i) => {\n                    return(<VideoComponent key={i} source={d.source} name={d.name} port={d.port}></VideoComponent>)\n                })}\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n        {/* <div style={{width: '700px', height: '100%', backgroundColor: '#333'}}>\n        \n        </div>\n        <div style={{gridTemplateRows: 'repeat(3, 325px)', backgroundColor: '#333', width: '30%', right:'0'}}>\n            {this.state.camerasList.map((d, i) => {\n                return(<VideoComponent key={i} source={d.source} name={d.name} port={d.port}></VideoComponent>)\n            })}\n        </div> */}\n    </div>\n    )}\n}\n\nexport default CameraLayout"]},"metadata":{},"sourceType":"module"}