{"ast":null,"code":"import _slicedToArray from \"/Users/aleclawlor/SecureVision/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/aleclawlor/SecureVision/client/src/components/snackbar/snackbar.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst snack = function SimpleSnackbar(props) {\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        open = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  let activated = props.activate;\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    activated = false;\n\n    if (reason === 'clickaway') {\n      return;\n    }\n  };\n\n  if (activated) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'bottom'\n      },\n      open: activated ? true : false,\n      autoHideDuration: 6000,\n      onClose: handleClose,\n      message: \"Snackbar!\",\n      action: React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"secondary\",\n        size: \"small\",\n        onClick: () => activated = false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"UNDO\"), React.createElement(IconButton, {\n        size: \"small\",\n        \"aria-label\": \"close\",\n        color: \"inherit\",\n        onClick: handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(CloseIcon, {\n        fontSize: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }));\n  } else {\n    return;\n  }\n};\n\nexport default snack;","map":{"version":3,"sources":["/Users/aleclawlor/SecureVision/client/src/components/snackbar/snackbar.js"],"names":["React","Button","Snackbar","IconButton","CloseIcon","snack","SimpleSnackbar","props","useState","open","setOpen","activated","activate","handleClick","handleClose","event","reason","vertical","horizontal"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;;AAEA,MAAMC,KAAK,GAAG,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA,0BACnBP,KAAK,CAACQ,QAAN,CAAe,KAAf,CADmB;AAAA;AAAA,QACpCC,IADoC;AAAA,QAC9BC,OAD8B;;AAG3C,MAAIC,SAAS,GAAGJ,KAAK,CAACK,QAAtB;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACxBH,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAMI,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnCL,IAAAA,SAAS,GAAG,KAAZ;;AACF,QAAIK,MAAM,KAAK,WAAf,EAA4B;AAC1B;AACD;AACF,GALD;;AAMA,MAAGL,SAAH,EAAa;AACb,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AACE,MAAA,YAAY,EAAE;AACZM,QAAAA,QAAQ,EAAE,QADE;AAEZC,QAAAA,UAAU,EAAE;AAFA,OADhB;AAKE,MAAA,IAAI,EAAEP,SAAS,GAAG,IAAH,GAAU,KAL3B;AAME,MAAA,gBAAgB,EAAE,IANpB;AAOE,MAAA,OAAO,EAAEG,WAPX;AAQE,MAAA,OAAO,EAAC,WARV;AASE,MAAA,MAAM,EACJ,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,WAAd;AAA0B,QAAA,IAAI,EAAC,OAA/B;AAAuC,QAAA,OAAO,EAAE,MAAMH,SAAS,GAAG,KAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIE,oBAAC,UAAD;AAAY,QAAA,IAAI,EAAC,OAAjB;AAAyB,sBAAW,OAApC;AAA4C,QAAA,KAAK,EAAC,SAAlD;AAA4D,QAAA,OAAO,EAAEG,WAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,QAAQ,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJF,CAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAwBD,GAzBC,MA0BE;AACA;AACH;AAAC,CA3CF;;AA6CA,eAAeT,KAAf","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst snack = function SimpleSnackbar(props) {\n  const [open, setOpen] = React.useState(false);\n  \n  let activated = props.activate\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n      activated = false\n    if (reason === 'clickaway') {\n      return;\n    }\n  };\n  if(activated){\n  return (\n    <div>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'bottom',\n        }}\n        open={activated ? true : false}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        message=\"Snackbar!\"\n        action={\n          <React.Fragment>\n            <Button color=\"secondary\" size=\"small\" onClick={() => activated = false}>\n              UNDO\n            </Button>\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n              <CloseIcon fontSize=\"small\" />\n            </IconButton>\n          </React.Fragment>\n        }\n      />\n    </div>\n  );\n}\nelse{\n    return;\n}}\n\nexport default snack"]},"metadata":{},"sourceType":"module"}