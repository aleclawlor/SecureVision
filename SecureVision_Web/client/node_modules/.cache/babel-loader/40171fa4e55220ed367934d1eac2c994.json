{"ast":null,"code":"var _jsxFileName = \"/Users/aleclawlor/SecureVision/client/src/components/unrecognizedActivity/unrecognizedTable.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '../snackbar/snackbar'; // add columns for number of visits and criminal record\n\nconst columns = [{\n  id: 'number',\n  label: 'Plate Number',\n  minWidth: 100\n}, {\n  id: 'location',\n  label: 'Location',\n  minWidth: 170,\n  align: 'left',\n  format: value => value.toFixed(2)\n}, {\n  id: 'recognitions',\n  label: 'Recognitions',\n  minWidth: 130,\n  align: 'left',\n  format: value => value.toLocaleString()\n}, {\n  id: 'time',\n  label: 'Time Entered',\n  minWidth: 170,\n  align: 'left',\n  format: value => value.toLocaleString()\n}, {\n  id: 'date',\n  label: 'Date',\n  minWidth: 170,\n  align: 'left',\n  format: value => value.toLocaleString()\n}];\n\nfunction createData(number, location, recognitions, time, date) {\n  return {\n    number,\n    location,\n    recognitions,\n    time,\n    date\n  };\n}\n\nconst rows = [// on an interval of time, get the data from the database and map it to the table\n// plate number, recognized status, date, time entered, status\ncreateData(123456, 'Front Entrance', 1, '2:50pm', '4/1/20'), createData(789101, 'Back Parking Lot', 2, '1:11pm', '4/1/20'), createData(333333, 'Side Entrance', 1, '12:50pm', '4/1/20'), createData(100000, 'Back Parking Lot', 1, '12:00pm', '4/1/20'), createData(101010, 'Front Entrance', 1, '10:00am', '4/1/20'), createData(104050, 'Front Entrance', 1, '9:55am', '4/1/20'), createData(100000, 'Back Parking Lot', 3, '12:00pm', '4/1/20'), createData(100000, 'Back Parking Lot', 4, '12:00pm', '4/1/20'), createData(100000, 'Back Parking Lot', 5, '12:00pm', '4/1/20'), createData(100000, 'Back Parking Lot', 3, '12:00pm', '4/1/20'), createData(100000, 'Back Parking Lot', 2, '12:00pm', '4/1/20'), createData(100000, 'Back Parking Lot', 1, '12:00pm', '4/1/20')];\nconst useStyles = makeStyles({\n  root: {\n    backgroundColor: '#F6F7F8',\n    color: '#F6F7F8',\n    width: '100%',\n    height: '200%'\n  },\n  container: {\n    backgroundColor: '#F6F7F8',\n    maxHeight: 600\n  }\n});\nexport default function StickyHeadTable(props) {\n  const classes = useStyles();\n  const [sortType, setSortType] = React.useState('recent');\n\n  const handleSort = () => {\n    const type = sortType;\n\n    if (props.sortType != type) {\n      if (type === 'recent') {\n        setSortType('recognitions');\n        props.setSort('recognitions');\n      } else if (type === 'recognitions') {\n        setSortType('recent');\n        props.setSort('recent');\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    style: {\n      backgroundColor: '#F6F7F8'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, columns.map(column => /*#__PURE__*/React.createElement(TableCell, {\n    key: column.id,\n    align: column.align,\n    style: {\n      minWidth: column.minWidth\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, column.label)))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, props.dataList.map((d, i) => {\n    if (d.location) {\n      return /*#__PURE__*/React.createElement(TableRow, {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 19\n        }\n      }, d.plateNumber), /*#__PURE__*/React.createElement(TableCell, {\n        align: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 19\n        }\n      }, d.location), /*#__PURE__*/React.createElement(TableCell, {\n        align: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 19\n        }\n      }, d.entryNumber), /*#__PURE__*/React.createElement(TableCell, {\n        align: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 19\n        }\n      }, d.time), /*#__PURE__*/React.createElement(TableCell, {\n        align: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 19\n        }\n      }, d.date));\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      marginTop: '25px',\n      marginLeft: '15px',\n      paddingBottom: '30px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      color: '#000A40'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, \"Sort By: \"), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      color: '#000A40'\n    },\n    onClick: handleSort,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, \"Most Recent\"), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      color: '#000A40'\n    },\n    onClick: handleSort,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, \"Most Frequent\")));\n}","map":{"version":3,"sources":["/Users/aleclawlor/SecureVision/client/src/components/unrecognizedActivity/unrecognizedTable.js"],"names":["React","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Button","Snackbar","columns","id","label","minWidth","align","format","value","toFixed","toLocaleString","createData","number","location","recognitions","time","date","rows","useStyles","root","backgroundColor","color","width","height","container","maxHeight","StickyHeadTable","props","classes","sortType","setSortType","useState","handleSort","type","setSort","map","column","dataList","d","i","plateNumber","entryNumber","marginTop","marginLeft","paddingBottom"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button'\nimport Snackbar from '../snackbar/snackbar'\n\n// add columns for number of visits and criminal record\nconst columns = [\n  { id: 'number', label: 'Plate Number', minWidth: 100 },\n  {\n  id: 'location',\n  label: 'Location',\n  minWidth: 170,\n  align: 'left',\n  format: (value) => value.toFixed(2),\n},\n{\n  id: 'recognitions',\n  label: 'Recognitions',\n  minWidth: 130,\n  align: 'left',\n  format: (value) => value.toLocaleString(),\n},\n  {\n    id: 'time',\n    label: 'Time Entered',\n    minWidth: 170,\n    align: 'left',\n    format: (value) => value.toLocaleString(),\n  },\n  {\n    id: 'date',\n    label: 'Date',\n    minWidth: 170,\n    align: 'left',\n    format: (value) => value.toLocaleString(),\n  },\n];\n\nfunction createData(number, location, recognitions, time, date) {\n  return { number, location, recognitions, time, date};\n}\n\nconst rows = [\n  // on an interval of time, get the data from the database and map it to the table\n\n  // plate number, recognized status, date, time entered, status\n  createData(123456, 'Front Entrance', 1, '2:50pm', '4/1/20'),\n  createData(789101, 'Back Parking Lot', 2, '1:11pm','4/1/20'),\n  createData(333333, 'Side Entrance', 1, '12:50pm','4/1/20'),\n  createData(100000, 'Back Parking Lot', 1, '12:00pm','4/1/20'),\n  createData(101010, 'Front Entrance', 1,'10:00am','4/1/20'),\n  createData(104050, 'Front Entrance', 1,'9:55am','4/1/20'),\n  createData(100000, 'Back Parking Lot', 3,'12:00pm','4/1/20'),\n  createData(100000, 'Back Parking Lot', 4,'12:00pm','4/1/20'),\n  createData(100000, 'Back Parking Lot', 5,'12:00pm','4/1/20'),\n  createData(100000, 'Back Parking Lot', 3,'12:00pm','4/1/20'),\n  createData(100000, 'Back Parking Lot', 2,'12:00pm','4/1/20'),\n  createData(100000, 'Back Parking Lot', 1,'12:00pm','4/1/20'),\n];\n\nconst useStyles = makeStyles({\n  root: {\n    backgroundColor: '#F6F7F8',\n    color: '#F6F7F8',\n    width: '100%',\n    height: '200%'\n  },\n  container: {\n    backgroundColor: '#F6F7F8',\n    maxHeight: 600,\n  },\n});\n\nexport default function StickyHeadTable(props) {\n\n  const classes = useStyles();\n  const [sortType, setSortType] = React.useState('recent')\n  \n  const handleSort = () => {\n\n    const type = sortType\n    if(props.sortType != type){\n\n      if(type === 'recent'){\n        setSortType('recognitions')\n        props.setSort('recognitions')\n      }\n\n      else if(type === 'recognitions'){\n        setSortType('recent')\n        props.setSort('recent')\n      }\n    }\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead style={{backgroundColor: '#F6F7F8'}}>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {props.dataList.map((d, i) => {\n              if(d.location){\n              return (\n              <TableRow key={i}>\n                  <TableCell component=\"th\" scope=\"row\">{d.plateNumber}</TableCell>\n                  <TableCell align=\"left\">{d.location}</TableCell>\n                  <TableCell align=\"left\">{d.entryNumber}</TableCell>\n                  <TableCell align=\"left\">{d.time}</TableCell>\n                  <TableCell align=\"left\">{d.date}</TableCell>\n              </TableRow>\n            )}\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <div style={{width: '100%', marginTop: '25px', marginLeft: '15px', paddingBottom: '30px'}}>\n        <strong style={{color: '#000A40'}}>Sort By: </strong>\n        <Button style={{color: '#000A40'}} onClick={handleSort}>Most Recent</Button>\n        <Button style={{color: '#000A40'}} onClick={handleSort}>Most Frequent</Button>\n      </div>\n    </Paper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}