{"ast":null,"code":"var _jsxFileName = \"/Users/aleclawlor/SecureVision/client/src/components/cameraFeed/mainFeed.js\";\nimport React, { Component } from 'react';\nimport ReactPlayer from 'react-player';\nimport Paper from '@material-ui/core/Paper';\nimport { Button } from '@material-ui/core';\n\nconst Axios = require('axios');\n\nclass MainFeed extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      source: this.props.source,\n      name: this.props.name,\n      port: this.props.port,\n      buttonNames: this.props.buttonNames,\n      finished: false,\n      source: 'https://www.youtube.com/watch?v=F4SY7kTpqjk',\n      header: 'Default Feed'\n    };\n\n    this.handleChange = (name, source) => {\n      this.setState({\n        header: name,\n        source: source\n      });\n    };\n  }\n\n  componentDidMount() {\n    // get names of all the cameras\n    const getCameras = async () => {\n      let result = await Axios.get('/api/cameras/getCameras');\n      this.setState({\n        buttonNames: result.data.map((d, i) => {\n          if (d.isActive) {\n            return React.createElement(Button, {\n              key: i,\n              onClick: () => {\n                this.handleChange(d.name, d.source);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 30\n              },\n              __self: this\n            }, d.name);\n          }\n        })\n      });\n    };\n\n    getCameras();\n  }\n\n  render() {\n    let player = {\n      marginTop: '5px'\n    };\n    let buttonGridStyle = {\n      width: '700px',\n      height: '200px',\n      textAlign: 'center'\n    };\n    let buttons = {\n      marginLeft: '15px',\n      width: '670px',\n      height: '180px',\n      display: 'grid',\n      gridTemplateColumns: 'repeat(6, 111.66px)'\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: '700px',\n        height: '400px',\n        backgroundColor: '#333'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(ReactPlayer, {\n      url: this.state.source,\n      playing: true,\n      muted: true,\n      controls: false,\n      className: player,\n      width: \"100%\",\n      height: \"100%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        marginTop: '15px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: {\n        marginLeft: '15px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, this.state.header)), React.createElement(\"div\", {\n      style: buttonGridStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: buttons,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.state.buttonNames.map(d => {\n      return d;\n    })))));\n  }\n\n}\n\nexport default MainFeed;","map":{"version":3,"sources":["/Users/aleclawlor/SecureVision/client/src/components/cameraFeed/mainFeed.js"],"names":["React","Component","ReactPlayer","Paper","Button","Axios","require","MainFeed","state","source","props","name","port","buttonNames","finished","header","handleChange","setState","componentDidMount","getCameras","result","get","data","map","d","i","isActive","render","player","marginTop","buttonGridStyle","width","height","textAlign","buttons","marginLeft","display","gridTemplateColumns","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ReactPlayer from 'react-player'\nimport Paper from '@material-ui/core/Paper'\nimport { Button } from '@material-ui/core'\n\nconst Axios = require('axios')\n\nclass MainFeed extends Component{\n\n  state = {\n          source: this.props.source,\n          name: this.props.name,\n          port: this.props.port,\n          buttonNames: this.props.buttonNames,\n          finished: false,\n          source: 'https://www.youtube.com/watch?v=F4SY7kTpqjk',\n          header: 'Default Feed'\n    }  \n\n    handleChange = (name, source) => {\n      this.setState({header: name, source: source})\n    }\n\n    componentDidMount(){\n      // get names of all the cameras\n      const getCameras = async() => {\n        let result = await Axios.get('/api/cameras/getCameras')\n        this.setState({buttonNames: result.data.map((d, i) => {\n          if(d.isActive){\n            return <Button key={i} onClick={() => {this.handleChange(d.name, d.source)}}>{d.name}</Button>\n          }\n        })})\n      }\n    getCameras()\n    }\n\n    render(){\n\n        let player = {\n            marginTop: '5px'\n        }\n\n        let buttonGridStyle={\n            width: '700px',\n            height: '200px',\n            textAlign:'center'\n        }\n\n        let buttons = {\n            marginLeft: '15px', \n            width: '670px', \n            height:'180px', \n            display: 'grid',\n            gridTemplateColumns: 'repeat(6, 111.66px)'\n        }\n\n\n\n        return(\n\n            <div>\n                <div style={{width: '700px', height: '400px', backgroundColor: '#333'}}>\n                    <ReactPlayer url={this.state.source} playing muted controls={false} className={player} width=\"100%\" height=\"100%\"/>\n                    <div style={{marginTop: '15px'}}>\n                        <h1 style={{marginLeft: '15px'}}>{this.state.header}</h1>\n                    </div>\n                    <div style={buttonGridStyle}>\n                        <div style={buttons}>\n                            {this.state.buttonNames.map((d) => {\n                              return d\n                            })}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default MainFeed"]},"metadata":{},"sourceType":"module"}