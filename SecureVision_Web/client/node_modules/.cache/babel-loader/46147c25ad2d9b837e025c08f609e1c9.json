{"ast":null,"code":"const Axios = require('axios');\n\nconst Tesseract = require('tesseract.js');\n\nconst carsTest = require('../cameraFeed/carsTest.mp4');\n\nlet video = document.createElement('VIDEO');\nvideo.src = carsTest;\nlet canvas = document.createElement('canvas');\ncanvas.width = 400;\ncanvas.height = 400;\nlet context = canvas.getContext('2d');\ncontext.globalCompositeOperation = 'difference';\nsetInterval(sendImage, 10000);\n\nconst sendImage = () => {\n  // get screenshot from current video \n  context.drawImage(video, 0, 0, 640, 480);\n  let dataUrl = canvas.toDataURL();\n  Tesseract.recognize(dataUrl, 'eng', {\n    logger: m => console.log(m)\n  }).then(({\n    data: {\n      text\n    }\n  }) => {\n    console.log(text);\n  }); // for each video in the current list of video endpoints\n  // read license plate (if there is any)\n  // check db for the plate\n  // if unrecognized, send to db and alert \n\n  let currentPlateNumber = '123456'; // eventually changed to get unrecognized plates from db \n\n  let unrecognizedList = [];\n\n  if (!unrecognizedList.includes(currentPlateNumber)) {\n    let response = Axios.post('/api/unrecognized/addUnrecognized', {\n      plateNumber: currentPlateNumber\n    });\n    console.log(response);\n    unrecognizedList.insert(currentPlateNumber);\n  }\n};\n\nmodule.exports = sendImage;","map":{"version":3,"sources":["/Users/aleclawlor/SecureVision/client/src/components/dashboard/sendFeed.js"],"names":["Axios","require","Tesseract","carsTest","video","document","createElement","src","canvas","width","height","context","getContext","globalCompositeOperation","setInterval","sendImage","drawImage","dataUrl","toDataURL","recognize","logger","m","console","log","then","data","text","currentPlateNumber","unrecognizedList","includes","response","post","plateNumber","insert","module","exports"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,cAAD,CAAzB;;AAEA,MAAME,QAAQ,GAAGF,OAAO,CAAC,4BAAD,CAAxB;;AAEA,IAAIG,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAZ;AACAF,KAAK,CAACG,GAAN,GAAYJ,QAAZ;AAEA,IAAIK,MAAM,GAAGH,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAb;AACAE,MAAM,CAACC,KAAP,GAAe,GAAf;AACAD,MAAM,CAACE,MAAP,GAAgB,GAAhB;AACA,IAAIC,OAAO,GAAGH,MAAM,CAACI,UAAP,CAAkB,IAAlB,CAAd;AACAD,OAAO,CAACE,wBAAR,GAAmC,YAAnC;AAEAC,WAAW,CAACC,SAAD,EAAY,KAAZ,CAAX;;AAEA,MAAMA,SAAS,GAAG,MAAM;AAEpB;AACAJ,EAAAA,OAAO,CAACK,SAAR,CAAkBZ,KAAlB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,GAA/B,EAAoC,GAApC;AACA,MAAIa,OAAO,GAAGT,MAAM,CAACU,SAAP,EAAd;AAEAhB,EAAAA,SAAS,CAACiB,SAAV,CACIF,OADJ,EAEI,KAFJ,EAGI;AAAEG,IAAAA,MAAM,EAAEC,CAAC,IAAIC,OAAO,CAACC,GAAR,CAAYF,CAAZ;AAAf,GAHJ,EAIEG,IAJF,CAIO,CAAC;AAAEC,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF;AAAR,GAAD,KAAwB;AAC3BJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACH,GAND,EANoB,CAehB;AAEJ;AAEA;AAEA;;AAEA,MAAIC,kBAAkB,GAAG,QAAzB,CAvBoB,CAyBpB;;AACA,MAAIC,gBAAgB,GAAG,EAAvB;;AAEA,MAAG,CAAEA,gBAAgB,CAACC,QAAjB,CAA0BF,kBAA1B,CAAL,EAAoD;AAEhD,QAAIG,QAAQ,GAAG9B,KAAK,CAAC+B,IAAN,CAAW,mCAAX,EAAgD;AAC3DC,MAAAA,WAAW,EAAEL;AAD8C,KAAhD,CAAf;AAGAL,IAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ;AACAF,IAAAA,gBAAgB,CAACK,MAAjB,CAAwBN,kBAAxB;AACH;AAEJ,CArCD;;AAuCAO,MAAM,CAACC,OAAP,GAAiBpB,SAAjB","sourcesContent":["const Axios = require('axios')\nconst Tesseract = require('tesseract.js')\n\nconst carsTest = require('../cameraFeed/carsTest.mp4')\n\nlet video = document.createElement('VIDEO')\nvideo.src = carsTest\n\nlet canvas = document.createElement('canvas')\ncanvas.width = 400\ncanvas.height = 400\nlet context = canvas.getContext('2d')\ncontext.globalCompositeOperation = 'difference'\n\nsetInterval(sendImage, 10000)\n\nconst sendImage = () => {\n\n    // get screenshot from current video \n    context.drawImage(video, 0, 0, 640, 480)\n    let dataUrl = canvas.toDataURL()\n\n    Tesseract.recognize(\n        dataUrl,\n        'eng',\n        { logger: m => console.log(m)}\n    ).then(({ data: { text }} ) => {\n        console.log(text)\n    })\n\n\n        // for each video in the current list of video endpoints\n\n    // read license plate (if there is any)\n\n    // check db for the plate\n\n    // if unrecognized, send to db and alert \n\n    let currentPlateNumber = '123456'\n\n    // eventually changed to get unrecognized plates from db \n    let unrecognizedList = []\n\n    if(!(unrecognizedList.includes(currentPlateNumber))){\n\n        let response = Axios.post('/api/unrecognized/addUnrecognized', {\n            plateNumber: currentPlateNumber\n        })\n        console.log(response)\n        unrecognizedList.insert(currentPlateNumber)\n    }\n    \n}\n\nmodule.exports = sendImage"]},"metadata":{},"sourceType":"module"}