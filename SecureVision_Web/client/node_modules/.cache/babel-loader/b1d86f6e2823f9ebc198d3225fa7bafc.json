{"ast":null,"code":"var _jsxFileName = \"/Users/aleclawlor/SecureVision/client/src/components/dailyActivity/activityLayout.js\";\nimport React, { Component } from 'react';\nimport TableFixedHeader from './completeLog';\nimport Snackbar from '../snackbar/snackbar';\n\nconst Axios = require('axios');\n\nclass activityLayout extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataList: [],\n      triggerHighRisk: false,\n      mostRecentCriminalNumber: '',\n      mostRecentCriminalType: '',\n      mostRecentCriminalTime: '',\n      snackbar: null\n    };\n\n    this.refresh = async () => {\n      let data = await Axios.get('/api/lpr/getGeneralData');\n      let rawData = data.data;\n      let sorted = rawData.sort((a, b) => a.date < b.date ? 1 : a.date === b.date ? a.time < b.time ? 1 : -1 : -1);\n      let currentList = this.state.dataList; // console.log(sorted)\n      // console.log(currentList)\n\n      if (currentList.length != sorted.length && currentList.length != 0) {\n        const num_new = sorted.length - currentList.length;\n        console.log('New Plates: ', num_new);\n        let i = 0;\n\n        while (i < num_new) {\n          let newPlate = sorted[i];\n          console.log(newPlate);\n          let binaryImageEncoding = newPlate.imageData;\n          let recognized_plate_img = new Image();\n          let src = 'data:image/png;base64,' + binaryImageEncoding;\n          recognized_plate_img.src = src;\n          console.log(src);\n\n          if (newPlate.type != 'Parent') {\n            console.log('trigger high risk modal');\n            this.setState({\n              triggerHighRisk: true,\n              snackbar: React.createElement(Snackbar, {\n                message: [React.createElement(\"span\", {\n                  key: \"1\",\n                  style: {\n                    fontSize: '24px',\n                    marginBottom: '25px',\n                    color: ''\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 55\n                  },\n                  __self: this\n                }, \"High Risk Plate Detected\"), React.createElement(\"br\", {\n                  key: \"2\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 56\n                  },\n                  __self: this\n                }), React.createElement(\"br\", {\n                  key: \"3\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 56\n                  },\n                  __self: this\n                }), recognized_plate_img, React.createElement(\"img\", {\n                  src: \"https://occ-0-2794-2219.1.nflxso.net/dnm/api/v6/E8vDc_W8CLv7-yMQu8KMEC7Rrr8/AAAABYjI3IGWp6ZG81rxU5Cd-iX_aTvVL9WG7bA90_LXZrwSlCBqVe0QQVG2ZT1NC2LUX7FyClUEnMxpMlY7sBnRI3oNPYzu.jpg?r=65d\",\n                  style: {\n                    height: '400px',\n                    width: 'auto'\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 58\n                  },\n                  __self: this\n                }), React.createElement(\"span\", {\n                  key: \"4\",\n                  style: {\n                    fontSize: '20px',\n                    marginBottom: '15px'\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 59\n                  },\n                  __self: this\n                }, \"Plate: \", newPlate.plateNumber), React.createElement(\"br\", {\n                  key: \"5\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 60\n                  },\n                  __self: this\n                }), React.createElement(\"span\", {\n                  key: \"6\",\n                  style: {\n                    fontSize: '20px',\n                    marginBottom: '15px'\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 61\n                  },\n                  __self: this\n                }, \"Threat Type: \", newPlate.mostRecentCriminalType), React.createElement(\"br\", {\n                  key: \"7\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 62\n                  },\n                  __self: this\n                }), React.createElement(\"span\", {\n                  key: \"8\",\n                  style: {\n                    fontSize: '20px',\n                    marginBottom: '15px'\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 63\n                  },\n                  __self: this\n                }, \"Location: \", newPlate.time)],\n                activate: true,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 53\n                },\n                __self: this\n              })\n            });\n          }\n\n          i++;\n        }\n\n        console.log('recognized a plate');\n        this.setState({\n          dataList: sorted,\n          triggerHighRisk: false\n        });\n      }\n\n      this.setState({\n        dataList: sorted\n      });\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.state.triggerHighRisk === true) {\n      console.log('component updated to to true');\n    }\n  }\n\n  componentDidMount() {\n    console.log('complete layout did mount');\n    this.refresh();\n    this.intervalId = setInterval(this.refresh, 6000);\n  }\n\n  componentWillMount() {\n    clearInterval(this.intervalId);\n  }\n\n  render() {\n    console.log(this.state.triggerHighRisk);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(TableFixedHeader, {\n      dataList: this.state.dataList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), this.state.snackbar);\n  }\n\n}\n\nexport default activityLayout;","map":{"version":3,"sources":["/Users/aleclawlor/SecureVision/client/src/components/dailyActivity/activityLayout.js"],"names":["React","Component","TableFixedHeader","Snackbar","Axios","require","activityLayout","state","dataList","triggerHighRisk","mostRecentCriminalNumber","mostRecentCriminalType","mostRecentCriminalTime","snackbar","refresh","data","get","rawData","sorted","sort","a","b","date","time","currentList","length","num_new","console","log","i","newPlate","binaryImageEncoding","imageData","recognized_plate_img","Image","src","type","setState","fontSize","marginBottom","color","height","width","plateNumber","componentDidUpdate","componentDidMount","intervalId","setInterval","componentWillMount","clearInterval","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport TableFixedHeader from './completeLog'\nimport Snackbar from '../snackbar/snackbar'\n\nconst Axios = require('axios')\n\nclass activityLayout extends Component{\n\n  intervalId\n\n  state = {\n    dataList: [],\n    triggerHighRisk: false,\n    mostRecentCriminalNumber: '',\n    mostRecentCriminalType: '',\n    mostRecentCriminalTime: '',\n    snackbar: null  \n  }\n  \n  refresh = async() => {\n\n    let data = await Axios.get('/api/lpr/getGeneralData')\n    let rawData = data.data\n    \n    let sorted = rawData.sort((a,b) => (a.date < b.date) ? 1: (a.date === b.date) ? ((a.time < b.time) ? 1 : -1): -1)\n    let currentList = this.state.dataList\n\n    // console.log(sorted)\n    // console.log(currentList)\n\n    if(currentList.length != sorted.length && currentList.length != 0){\n        \n        const num_new = sorted.length - currentList.length \n        console.log('New Plates: ', num_new)\n\n        let i = 0\n        while(i < num_new){\n\n          let newPlate = sorted[i]\n          console.log(newPlate)\n          \n          let binaryImageEncoding = newPlate.imageData\n          let recognized_plate_img = new Image()\n          let src = 'data:image/png;base64,' + binaryImageEncoding\n          recognized_plate_img.src = src \n          \n          console.log(src)\n\n          if(newPlate.type != 'Parent'){\n            console.log('trigger high risk modal')\n            this.setState({\n              triggerHighRisk: true,\n              snackbar: <Snackbar\n                message={[\n                    <span key=\"1\" style={{fontSize: '24px', marginBottom: '25px', color: ''}}>High Risk Plate Detected</span>,\n                    <br key=\"2\"></br>,<br key=\"3\"></br>,\n                    recognized_plate_img,\n                    <img src=\"https://occ-0-2794-2219.1.nflxso.net/dnm/api/v6/E8vDc_W8CLv7-yMQu8KMEC7Rrr8/AAAABYjI3IGWp6ZG81rxU5Cd-iX_aTvVL9WG7bA90_LXZrwSlCBqVe0QQVG2ZT1NC2LUX7FyClUEnMxpMlY7sBnRI3oNPYzu.jpg?r=65d\" style={{height: '400px', width: 'auto'}}></img>,\n                    <span key=\"4\" style={{fontSize: '20px', marginBottom: '15px'}}>Plate: {newPlate.plateNumber}</span>,\n                    <br key=\"5\"></br>,\n                    <span key=\"6\" style={{fontSize: '20px', marginBottom: '15px'}}>Threat Type: {newPlate.mostRecentCriminalType}</span>,\n                    <br key=\"7\" ></br>,\n                    <span key=\"8\" style={{fontSize: '20px', marginBottom: '15px'}}>Location: {newPlate.time}</span>\n                ]}\n                activate={true}\n                >\n            </Snackbar>\n            })\n          }\n          i++\n        }\n        console.log('recognized a plate')\n        this.setState({dataList: sorted, triggerHighRisk: false})\n    }\n    this.setState({dataList: sorted})\n  }\n\n  componentDidUpdate(){\n    if(this.state.triggerHighRisk === true){\n      console.log('component updated to to true')\n    }\n  }\n\n  componentDidMount(){\n    console.log('complete layout did mount')\n    this.refresh()\n    this.intervalId = setInterval(this.refresh, 6000)\n  }\n\n  componentWillMount(){\n      clearInterval(this.intervalId)\n  }\n\n  render(){\n\n    console.log(this.state.triggerHighRisk)\n\n    return(\n        <div>\n            <TableFixedHeader dataList={this.state.dataList}/>\n            {this.state.snackbar}\n        </div>\n       )\n    }\n}\n\nexport default activityLayout"]},"metadata":{},"sourceType":"module"}