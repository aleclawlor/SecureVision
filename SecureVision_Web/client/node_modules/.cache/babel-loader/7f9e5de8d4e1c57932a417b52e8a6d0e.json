{"ast":null,"code":"var _jsxFileName = \"/Users/aleclawlor/SecureVision/client/src/components/configuration/lprConfig.js\";\nimport React, { Component, createRef } from 'react';\nimport Button from '@material-ui/core/Button';\nimport ReactPlayer from 'react-player';\nimport Axios from 'axios';\nconst classes = {\n  returnArrow: {\n    fontSize: '40px',\n    position: 'absolute',\n    marginTop: '30px'\n  },\n  buttonsArea: {\n    width: '80%',\n    overflow: 'scroll',\n    height: '80px',\n    marginTop: '50px'\n  },\n  canvasArea: {\n    width: '80%',\n    height: '400px',\n    display: 'flex',\n    backgroundColor: '#333',\n    textAlign: 'center',\n    justifyContent: 'center',\n    marginTop: '5px'\n  },\n  canvas: {\n    backgroundColor: 'yellow',\n    width: '80%'\n  },\n  buttonStyling: {\n    marginLeft: '20px',\n    marginRight: '20px'\n  }\n};\n\nclass LprConfig extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentSource: null,\n      camerasList: null,\n      videoSource: null\n    };\n    this.canvasRef = createRef();\n  }\n\n  componentDidMount() {\n    Axios.get('/api/cameras/getCameras').then(data => {\n      this.setState({\n        camerasList: data.data,\n        currentSource: data.data[0]\n      });\n      console.log(data);\n    }).catch(err => {\n      console.log(err);\n    });\n    const canvas = this.canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.fillRect(0, 0, canvas.width / 2, canvas.height / 2);\n  }\n\n  componentDidUpdate() {\n    const canvas = this.canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const width = canvas.width;\n    const height = canvas.height;\n    ctx.save();\n  }\n\n  render() {\n    console.log(this.state.videoSource);\n    let buttons = this.state.camerasList ? this.state.camerasList.map((data, index) => {\n      return data.isActive ? React.createElement(Button, {\n        style: classes.buttonStyling,\n        key: index,\n        onClick: () => {\n          this.setState({\n            currentSource: data.source\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, data.name) : null;\n    }) : null;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Configure License Plate Detection Zone\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Select a camera feed to configure its license plate detection area. Only license plates within the desingated box will be detected.\"), React.createElement(\"div\", {\n      style: classes.buttonsArea,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, buttons), React.createElement(\"div\", {\n      style: classes.canvasArea,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      style: classes.canvas,\n      ref: this.canvasRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"video\", {\n      src: require('../../assets/videos/headOn.mp4'),\n      ref: \"video\",\n      width: \"50%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })), React.createElement(\"a\", {\n      href: \"/dashboard/configuration\",\n      style: {\n        textDecoration: 'none',\n        color: '#000'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      class: \"material-icons\",\n      style: classes.returnArrow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"arrow_back\")));\n  }\n\n}\n\nexport default LprConfig;","map":{"version":3,"sources":["/Users/aleclawlor/SecureVision/client/src/components/configuration/lprConfig.js"],"names":["React","Component","createRef","Button","ReactPlayer","Axios","classes","returnArrow","fontSize","position","marginTop","buttonsArea","width","overflow","height","canvasArea","display","backgroundColor","textAlign","justifyContent","canvas","buttonStyling","marginLeft","marginRight","LprConfig","state","currentSource","camerasList","videoSource","canvasRef","componentDidMount","get","then","data","setState","console","log","catch","err","current","context","getContext","fillRect","componentDidUpdate","ctx","save","render","buttons","map","index","isActive","source","name","require","textDecoration","color"],"mappings":"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","sourcesContent":["import React, { Component, createRef } from 'react'\nimport Button from '@material-ui/core/Button'\nimport ReactPlayer from 'react-player'\nimport Axios from 'axios'\n\nconst classes = {\n    returnArrow: {\n        fontSize: '40px',\n        position: 'absolute',\n        marginTop: '30px'\n    },\n    buttonsArea: {\n        width: '80%',\n        overflow: 'scroll',\n        height: '80px',\n        marginTop: '50px'\n    },\n    canvasArea: {\n        width: '80%',\n        height: '400px',\n        display: 'flex',\n        backgroundColor: '#333',\n        textAlign: 'center',\n        justifyContent: 'center',\n        marginTop: '5px'\n    },\n    canvas: {\n        backgroundColor: 'yellow',\n        width: '80%'\n    },\n    buttonStyling: {\n        marginLeft: '20px',\n        marginRight: '20px'\n    }\n}\n\nclass LprConfig extends Component{\n\n\n    state = {\n        currentSource: null,\n        camerasList: null,\n        videoSource: null,\n    }\n\n    canvasRef = createRef()\n\n    componentDidMount(){\n\n        Axios.get('/api/cameras/getCameras')\n        .then(data => {\n            this.setState({camerasList: data.data, currentSource: data.data[0]})\n            console.log(data)\n        }).catch(err => {\n            console.log(err)\n        })\n\n        const canvas = this.canvasRef.current\n        const context = canvas.getContext('2d')\n        context.fillRect(0, 0, canvas.width / 2, canvas.height / 2)\n\n    }\n\n    componentDidUpdate(){\n        const canvas = this.canvasRef.current \n        const ctx = canvas.getContext('2d')\n        const width = canvas.width \n        const height = canvas.height\n        ctx.save()\n\n    }\n\n    render(){\n\n        console.log(this.state.videoSource)\n\n        let buttons = this.state.camerasList ? this.state.camerasList.map((data, index) => {\n            return data.isActive ? \n            <Button style={classes.buttonStyling} key={index} onClick={() => {this.setState({currentSource: data.source})}}>\n            {data.name}\n            </Button> : null\n        }) : null \n\n        return(\n            <div>\n                <h1>Configure License Plate Detection Zone</h1>\n                <p>Select a camera feed to configure its license plate detection area. Only license plates within the desingated box will be detected.</p>\n                <div style={classes.buttonsArea}>\n                {buttons}\n                </div>\n                <div style={classes.canvasArea}>\n                    <canvas style={classes.canvas} ref={this.canvasRef}></canvas>\n                    <video src={require('../../assets/videos/headOn.mp4')} ref=\"video\" width=\"50%\"></video>\n                    {/* <ReactPlayer url={this.state.currentSource} ref=\"video\"/> */}\n                </div>\n                <a href=\"/dashboard/configuration\" style={{textDecoration: 'none', color: '#000'}}>\n                    <span class=\"material-icons\" style={classes.returnArrow}>\n                        arrow_back\n                    </span>  \n                </a>           \n            </div>\n        )\n    }\n}\n\nexport default LprConfig"]},"metadata":{},"sourceType":"module"}