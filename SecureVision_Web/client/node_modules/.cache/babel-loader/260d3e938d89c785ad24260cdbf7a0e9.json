{"ast":null,"code":"var _jsxFileName = \"/Users/aleclawlor/SecureVision/client/src/components/activePlatesFeed/searchTable.js\";\nimport React, { Component } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Button } from '@material-ui/core';\n\nconst Axios = require('axios');\n\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: '#333',\n    color: '#E5E5E5',\n    fontSize: 17\n  },\n  body: {\n    fontSize: 15\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    backgroundColor: '#E5E5E5'\n  }\n}))(TableRow);\nlet rows = [createData('Alec Lawlor', 'Parent', '123456', [React.createElement(Button, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, \"Edit\"), React.createElement(Button, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, \"Delete\")])];\n\nfunction createData(name, type, platenumber, actions) {\n  return {\n    name,\n    type,\n    platenumber,\n    actions\n  };\n}\n\nconsole.log(rows);\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n    maxHeight: '200px'\n  }\n});\n\nclass CustomizedTables extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: []\n    };\n  }\n\n  async componentDidMount() {\n    let getData = await Axios.get('/api/get/getPlates');\n    let plateData = getData.data;\n    console.log(\"Plate list:\", plateData);\n    this.setState({\n      data: plateData\n    });\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(TableContainer, {\n      component: Paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Table, {\n      className: classes.table,\n      \"aria-label\": \"customized table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(StyledTableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Name\"), React.createElement(StyledTableCell, {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Type\"), React.createElement(StyledTableCell, {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Plate Number\"), React.createElement(StyledTableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Actions\"))), React.createElement(TableBody, {\n      style: {\n        maxHeight: '200px',\n        overflow: 'scroll'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.state.data.map((row, i) => React.createElement(StyledTableRow, {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(StyledTableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, row.parentName), React.createElement(StyledTableCell, {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, row.studentName), React.createElement(StyledTableCell, {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, row.plateNumber), React.createElement(StyledTableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, row.isActive))))));\n  }\n\n}\n\nexport default withStyles(useStyles)(CustomizedTables);","map":{"version":3,"sources":["/Users/aleclawlor/SecureVision/client/src/components/activePlatesFeed/searchTable.js"],"names":["React","Component","withStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","Axios","require","StyledTableCell","theme","head","backgroundColor","color","fontSize","body","StyledTableRow","root","rows","createData","name","type","platenumber","actions","console","log","useStyles","table","minWidth","maxHeight","CustomizedTables","state","data","componentDidMount","getData","get","plateData","setState","render","classes","props","overflow","map","row","i","parentName","studentName","plateNumber","isActive"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Button } from '@material-ui/core';\n\nconst Axios = require('axios')\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: '#333',\n    color: '#E5E5E5',\n    fontSize: 17\n  },\n  body: {\n    fontSize: 15,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n      backgroundColor: '#E5E5E5',\n  },\n}))(TableRow);\n\nlet rows = [\n    createData('Alec Lawlor', 'Parent', '123456', [<Button>Edit</Button>,<Button>Delete</Button>])\n]\n\nfunction createData(name, type, platenumber, actions) {\n  return { name, type, platenumber, actions };\n}\n\nconsole.log(rows)\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n    maxHeight: '200px'\n  },\n});\n\nclass CustomizedTables extends Component {\n\n  state = {\n      data: []\n  }\n\n\n  async componentDidMount(){\n\n    let getData =  await Axios.get('/api/get/getPlates')\n\n    let plateData = getData.data\n    console.log(\"Plate list:\", plateData)\n\n    this.setState({data: plateData})\n\n  }\n\n  render(){\n    const {classes} = this.props;\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Name</StyledTableCell>\n            <StyledTableCell align=\"left\">Type</StyledTableCell>\n            <StyledTableCell align=\"left\">Plate Number</StyledTableCell>\n            <StyledTableCell align=\"right\">Actions</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody style={{maxHeight: '200px', overflow: 'scroll'}}>\n          {this.state.data.map((row, i) => (\n            <StyledTableRow key={i}>\n              <StyledTableCell component=\"th\" scope=\"row\">\n                {row.parentName}\n              </StyledTableCell>\n              <StyledTableCell align=\"left\">{row.studentName}</StyledTableCell>\n              <StyledTableCell align=\"left\">{row.plateNumber}</StyledTableCell>\n              <StyledTableCell align=\"right\">{row.isActive}</StyledTableCell>\n            </StyledTableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )};\n}\n\nexport default withStyles(useStyles)(CustomizedTables)"]},"metadata":{},"sourceType":"module"}