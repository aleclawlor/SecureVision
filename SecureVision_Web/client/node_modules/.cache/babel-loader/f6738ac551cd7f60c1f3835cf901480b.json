{"ast":null,"code":"var _jsxFileName = \"/Users/aleclawlor/SecureVision/client/src/components/snackbar/snackbar.js\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nclass snack extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      shouldOpen: true\n    };\n\n    this.handleClick = () => {// setOpen(true);\n    };\n\n    this.handleClose = (event, reason) => {// if (reason === 'clickaway') {\n      //   return;\n      // }\n      // setOpen(false);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'bottom'\n      },\n      open: this.state.shouldOpen,\n      autoHideDuration: 6000,\n      onClose: this.handleClose,\n      message: \"Note archived\",\n      action: React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"secondary\",\n        size: \"small\",\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"UNDO\"), React.createElement(IconButton, {\n        size: \"small\",\n        \"aria-label\": \"close\",\n        color: \"inherit\",\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(CloseIcon, {\n        fontSize: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default snack;","map":{"version":3,"sources":["/Users/aleclawlor/SecureVision/client/src/components/snackbar/snackbar.js"],"names":["React","Component","Button","Snackbar","IconButton","CloseIcon","snack","state","shouldOpen","handleClick","handleClose","event","reason","render","vertical","horizontal"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;;AAEA,MAAMC,KAAN,SAAoBL,SAApB,CAA8B;AAAA;AAAA;AAAA,SAG5BM,KAH4B,GAGpB;AACJC,MAAAA,UAAU,EAAE;AADR,KAHoB;;AAAA,SAO5BC,WAP4B,GAOd,MAAM,CAClB;AACD,KAT2B;;AAAA,SAW5BC,WAX4B,GAWd,CAACC,KAAD,EAAQC,MAAR,KAAmB,CAC/B;AACA;AACA;AACA;AACD,KAhB2B;AAAA;;AAkB9BC,EAAAA,MAAM,GAAE;AACN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AACE,MAAA,YAAY,EAAE;AACZC,QAAAA,QAAQ,EAAE,QADE;AAEZC,QAAAA,UAAU,EAAE;AAFA,OADhB;AAKE,MAAA,IAAI,EAAE,KAAKR,KAAL,CAAWC,UALnB;AAME,MAAA,gBAAgB,EAAE,IANpB;AAOE,MAAA,OAAO,EAAE,KAAKE,WAPhB;AAQE,MAAA,OAAO,EAAC,eARV;AASE,MAAA,MAAM,EACJ,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,WAAd;AAA0B,QAAA,IAAI,EAAC,OAA/B;AAAuC,QAAA,OAAO,EAAE,KAAKA,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIE,oBAAC,UAAD;AAAY,QAAA,IAAI,EAAC,OAAjB;AAAyB,sBAAW,OAApC;AAA4C,QAAA,KAAK,EAAC,SAAlD;AAA4D,QAAA,OAAO,EAAE,KAAKA,WAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,QAAQ,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJF,CAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAuBE;;AA1C0B;;AA6C9B,eAAeJ,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nclass snack extends Component {\n  \n\n  state = {\n      shouldOpen: true\n  }\n\n  handleClick = () => {\n    // setOpen(true);\n  };\n\n  handleClose = (event, reason) => {\n    // if (reason === 'clickaway') {\n    //   return;\n    // }\n    // setOpen(false);\n  };\n\nrender(){\n  return (\n    <div>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'bottom',\n        }}\n        open={this.state.shouldOpen}\n        autoHideDuration={6000}\n        onClose={this.handleClose}\n        message=\"Note archived\"\n        action={\n          <React.Fragment>\n            <Button color=\"secondary\" size=\"small\" onClick={this.handleClose}>\n              UNDO\n            </Button>\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={this.handleClose}>\n              <CloseIcon fontSize=\"small\" />\n            </IconButton>\n          </React.Fragment>\n        }\n      />\n    </div>\n  )};\n}\n\nexport default snack"]},"metadata":{},"sourceType":"module"}