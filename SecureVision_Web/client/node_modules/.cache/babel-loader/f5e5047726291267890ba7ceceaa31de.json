{"ast":null,"code":"var _jsxFileName = \"/Users/aleclawlor/SecureVision/client/src/components/dailyActivity/activityLayout.js\";\nimport React, { Component } from 'react';\nimport TableFixedHeader from './completeLog';\nimport Snackbar from '../snackbar/snackbar';\n\nconst Axios = require('axios');\n\nclass activityLayout extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataList: [],\n      triggerHighRisk: false,\n      mostRecentCriminalNumber: '',\n      mostRecentCriminalType: '',\n      mostRecentCriminalTime: '',\n      snackbar: null\n    };\n\n    this.refresh = async () => {\n      let data = await Axios.get('/api/lpr/getGeneralData');\n      let rawData = data.data;\n      let sorted = rawData.sort((a, b) => a.date < b.date ? 1 : a.date === b.date ? a.time < b.time ? 1 : -1 : -1);\n      let currentList = this.state.dataList;\n      console.log(sorted);\n      console.log(currentList);\n\n      if (currentList.length != sorted.length && currentList.length != 0) {\n        const num_new = sorted.length - currentList.length;\n        console.log('New Plates: ', num_new);\n        let i = 0;\n\n        while (i < num_new) {\n          let newPlate = sorted[i];\n          console.log(newPlate);\n\n          if (newPlate.type != 'Parent') {\n            console.log('trigger high risk modal');\n            this.setState({\n              triggerHighRisk: true,\n              snackbar: React.createElement(Snackbar, {\n                message: [React.createElement(\"span\", {\n                  key: \"1\",\n                  style: {\n                    fontSize: '24px',\n                    marginBottom: '25px',\n                    color: ''\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 48\n                  },\n                  __self: this\n                }, \"High Risk Plate Detected\"), React.createElement(\"br\", {\n                  key: \"2\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 49\n                  },\n                  __self: this\n                }), React.createElement(\"br\", {\n                  key: \"3\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 49\n                  },\n                  __self: this\n                }), React.createElement(\"span\", {\n                  key: \"4\",\n                  style: {\n                    fontSize: '20px',\n                    marginBottom: '15px'\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 50\n                  },\n                  __self: this\n                }, \"Plate: \", this.state.mostRecentCriminalNumber), React.createElement(\"br\", {\n                  key: \"5\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 51\n                  },\n                  __self: this\n                }), React.createElement(\"span\", {\n                  key: \"6\",\n                  style: {\n                    fontSize: '20px',\n                    marginBottom: '15px'\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 52\n                  },\n                  __self: this\n                }, \"Threat Type: \", this.state.mostRecentCriminalType), React.createElement(\"br\", {\n                  key: \"7\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 53\n                  },\n                  __self: this\n                }), React.createElement(\"span\", {\n                  key: \"8\",\n                  style: {\n                    fontSize: '20px',\n                    marginBottom: '15px'\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 54\n                  },\n                  __self: this\n                }, \"Location: \", this.state.mostRecentCriminalTime)],\n                activate: true,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 46\n                },\n                __self: this\n              })\n            });\n          }\n\n          i++;\n        }\n\n        console.log('recognized a plate');\n        this.setState({\n          dataList: sorted,\n          triggerHighRisk: false,\n          snackbar: null\n        });\n      }\n\n      this.setState({\n        dataList: sorted\n      });\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.state.triggerHighRisk === true) {\n      console.log('component updated to to true');\n    }\n  }\n\n  componentDidMount() {\n    console.log('complete layout did mount');\n    this.refresh();\n    this.intervalId = setInterval(this.refresh, 6000);\n  }\n\n  componentWillMount() {\n    clearInterval(this.intervalId);\n  }\n\n  render() {\n    console.log(this.state.triggerHighRisk);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(TableFixedHeader, {\n      dataList: this.state.dataList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), this.state.snackbar);\n  }\n\n}\n\nexport default activityLayout;","map":{"version":3,"sources":["/Users/aleclawlor/SecureVision/client/src/components/dailyActivity/activityLayout.js"],"names":["React","Component","TableFixedHeader","Snackbar","Axios","require","activityLayout","state","dataList","triggerHighRisk","mostRecentCriminalNumber","mostRecentCriminalType","mostRecentCriminalTime","snackbar","refresh","data","get","rawData","sorted","sort","a","b","date","time","currentList","console","log","length","num_new","i","newPlate","type","setState","fontSize","marginBottom","color","componentDidUpdate","componentDidMount","intervalId","setInterval","componentWillMount","clearInterval","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport TableFixedHeader from './completeLog'\nimport Snackbar from '../snackbar/snackbar'\n\nconst Axios = require('axios')\n\nclass activityLayout extends Component{\n\n  intervalId\n\n  state = {\n    dataList: [],\n    triggerHighRisk: false,\n    mostRecentCriminalNumber: '',\n    mostRecentCriminalType: '',\n    mostRecentCriminalTime: '',\n    snackbar: null  \n  }\n  \n  refresh = async() => {\n\n    let data = await Axios.get('/api/lpr/getGeneralData')\n    let rawData = data.data\n    \n    let sorted = rawData.sort((a,b) => (a.date < b.date) ? 1: (a.date === b.date) ? ((a.time < b.time) ? 1 : -1): -1)\n    let currentList = this.state.dataList\n\n    console.log(sorted)\n    console.log(currentList)\n\n    if(currentList.length != sorted.length && currentList.length != 0){\n        \n        const num_new = sorted.length - currentList.length \n        console.log('New Plates: ', num_new)\n\n        let i = 0\n        while(i < num_new){\n\n          let newPlate = sorted[i]\n          console.log(newPlate)\n\n          if(newPlate.type != 'Parent'){\n            console.log('trigger high risk modal')\n            this.setState({\n              triggerHighRisk: true,\n              snackbar: <Snackbar\n                message={[\n                    <span key=\"1\" style={{fontSize: '24px', marginBottom: '25px', color: ''}}>High Risk Plate Detected</span>,\n                    <br key=\"2\"></br>,<br key=\"3\"></br>,\n                    <span key=\"4\" style={{fontSize: '20px', marginBottom: '15px'}}>Plate: {this.state.mostRecentCriminalNumber}</span>,\n                    <br key=\"5\"></br>,\n                    <span key=\"6\" style={{fontSize: '20px', marginBottom: '15px'}}>Threat Type: {this.state.mostRecentCriminalType}</span>,\n                    <br key=\"7\" ></br>,\n                    <span key=\"8\" style={{fontSize: '20px', marginBottom: '15px'}}>Location: {this.state.mostRecentCriminalTime}</span>\n                ]}\n                activate={true}\n                >\n            </Snackbar>\n            })\n          }\n          i++\n        }\n\n        console.log('recognized a plate')\n\n        this.setState({dataList: sorted, triggerHighRisk: false, snackbar: null})\n        \n    }\n\n    this.setState({dataList: sorted})\n  }\n\n  componentDidUpdate(){\n    if(this.state.triggerHighRisk === true){\n      console.log('component updated to to true')\n    }\n  }\n\n  componentDidMount(){\n    console.log('complete layout did mount')\n    this.refresh()\n    this.intervalId = setInterval(this.refresh, 6000)\n  }\n\n  componentWillMount(){\n      clearInterval(this.intervalId)\n  }\n\n  render(){\n\n    console.log(this.state.triggerHighRisk)\n\n    return(\n        <div>\n            <TableFixedHeader dataList={this.state.dataList}/>\n            {this.state.snackbar}\n        </div>\n       )\n    }\n}\n\nexport default activityLayout"]},"metadata":{},"sourceType":"module"}