{"ast":null,"code":"var _jsxFileName = \"/Users/aleclawlor/SecureVision/client/src/components/activePlatesFeed/searchTable.js\";\nimport React, { Component } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Button, TextField } from '@material-ui/core';\nimport TableItem from './tableItem';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from 'react-loader-spinner';\n\nconst Axios = require('axios'); // function used to create a cell within the active plates table\n\n\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: '#333',\n    color: '#303030',\n    fontSize: 17\n  },\n  body: {\n    fontSize: 15\n  }\n}))(TableCell);\n\nfunction createData(name, type, platenumber, actions) {\n  return {\n    name,\n    type,\n    platenumber,\n    actions\n  };\n}\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n    maxHeight: 400,\n    overflow: 'scroll'\n  }\n});\nconst primaryColor = '#2D2D2D';\nconst accentColor = '#1C63CD';\nconst accentColor_secondary = '#FD663A';\n\nclass CustomizedTables extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      showParentEdit: false,\n      showParentDeactivate: false,\n      search: '',\n      searchType: 'Plate Number',\n      loading: true\n    };\n\n    this.handleSortChange = () => {\n      if (this.state.searchType === 'Plate Number') {\n        this.setState({\n          searchType: 'Parent Name'\n        });\n      } else if (this.state.searchType === 'Parent Name') {\n        this.setState({\n          searchType: 'Plate Number'\n        });\n      }\n    };\n\n    this.onCancel = () => {\n      this.setState({\n        showParentEdit: false,\n        showParentDeactivate: false\n      });\n    };\n\n    this.submitted = async () => {\n      this.setState({\n        showParentEdit: false,\n        showParentDeactivate: false\n      });\n      let getData = await Axios.get('/api/get/getPlates');\n      let getHighAlert = await Axios.get('/api/get/getHighRisk');\n      let plateData = getData.data;\n      let highAlertData = getHighAlert.data; // merge parent plate and highAlert plate data\n\n      let mergedData = plateData.concat(highAlertData);\n      console.log(\"Plate list:\", mergedData);\n      this.setState({\n        data: mergedData\n      });\n    };\n\n    this.updateSearch = event => {\n      // assume search value won't be larger than 20 characters long \n      this.setState({\n        search: event.target.value.substr(0, 20)\n      });\n      console.log(\"Search\");\n    };\n  }\n\n  async componentDidMount() {\n    // get all data (parent and high risk) on initial component mount and merge\n    let getData = await Axios.get('/api/get/getPlates');\n    let getHighAlert = await Axios.get('/api/get/getHighRisk');\n    let plateData = getData.data;\n    let highAlertData = getHighAlert.data; // merge parent plate and highAlert plate data\n\n    let mergedData = plateData.concat(highAlertData);\n    console.log(\"Plate list:\", mergedData);\n    this.setState({\n      data: mergedData,\n      loading: false\n    });\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props; // filter the data by name pr number\n\n    let filteredData = this.state.data.filter(person => {\n      // filter by name \n      if (this.state.searchType === 'Parent Name') {\n        // the name we're searching for is a parent plate\n        if (person.parentName) {\n          return person.parentName.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1;\n        } // the name we're searching for is a criminal plate\n        else if (person.name) {\n            return person.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1;\n          }\n      } // the user chooses to search by plate number \n      else if (this.state.searchType === 'Plate Number') {\n          if (person.plateNumber) {\n            return person.plateNumber.indexOf(this.state.search) !== -1;\n          }\n        }\n    });\n    const headerCellStyle = {\n      backgroundColor: '#F6F7F8',\n      color: primaryColor,\n      fontWeight: 'bold',\n      fontSize: '15px'\n    };\n\n    const schoolID = JSON.parse(localStorage.getItem('userObj'))._id;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      onChange: this.updateSearch,\n      color: accentColor,\n      label: /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          marginLeft: '10px',\n          marginBottom: '5px',\n          fontSize: '15px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 16\n        }\n      }, \"Searching By \", this.state.searchType === 'Plate Number' ? 'Number' : 'Name'),\n      variant: \"outlined\",\n      style: {\n        width: '250px',\n        height: '15px',\n        marginBottom: '50px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      style: {\n        height: '75%',\n        marginLeft: '10px',\n        color: accentColor,\n        fontWeight: 550\n      },\n      onClick: this.handleSortChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 7\n      }\n    }, \"Search by \", this.state.searchType === 'Parent Name' ? 'Plate Number' : 'Parent Name')), this.state.loading ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: '28%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      type: \"Rings\",\n      color: accentColor,\n      secondaryColor: accentColor_secondary,\n      height: 400,\n      width: 400,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 7\n      }\n    })) : /*#__PURE__*/React.createElement(TableContainer, {\n      component: Paper,\n      style: {\n        maxHeight: 600\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      className: classes.table,\n      stickyHeader: true,\n      \"aria-label\": \"sticky table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      style: {\n        color: '#fff'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(StyledTableCell, {\n      style: headerCellStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n      style: headerCellStyle,\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }\n    }, \"Type\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n      style: headerCellStyle,\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }\n    }, \"Plate Number\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n      style: headerCellStyle,\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }\n    }, \"Actions\"))), /*#__PURE__*/React.createElement(TableBody, {\n      style: {\n        maxHeight: 550,\n        overflow: 'scroll',\n        color: '#000A40'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }\n    }, filteredData.map((row, i) => {\n      if (row.isActive && row.schoolID === schoolID) {\n        return /*#__PURE__*/React.createElement(TableItem, {\n          i: i,\n          id: row._id,\n          onSubmit: this.submitted,\n          studentName: row.studentName,\n          name: row.parentName ? row.parentName : row.name,\n          type: row.parentName ? 'Parent' : row.type,\n          plateNumber: row.plateNumber,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 24\n          }\n        });\n      }\n    })))));\n  }\n\n}\n\nexport default withStyles(useStyles)(CustomizedTables);","map":{"version":3,"sources":["/Users/aleclawlor/SecureVision/client/src/components/activePlatesFeed/searchTable.js"],"names":["React","Component","withStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","TextField","TableItem","Loader","Axios","require","StyledTableCell","theme","head","backgroundColor","color","fontSize","body","createData","name","type","platenumber","actions","useStyles","table","minWidth","maxHeight","overflow","primaryColor","accentColor","accentColor_secondary","CustomizedTables","state","data","showParentEdit","showParentDeactivate","search","searchType","loading","handleSortChange","setState","onCancel","submitted","getData","get","getHighAlert","plateData","highAlertData","mergedData","concat","console","log","updateSearch","event","target","value","substr","componentDidMount","render","classes","props","filteredData","filter","person","parentName","toLowerCase","indexOf","plateNumber","headerCellStyle","fontWeight","schoolID","JSON","parse","localStorage","getItem","_id","width","display","alignItems","marginLeft","marginBottom","height","map","row","i","isActive","studentName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Button, TextField } from '@material-ui/core';\nimport TableItem from './tableItem'\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport Loader from 'react-loader-spinner'\n\nconst Axios = require('axios')\n\n// function used to create a cell within the active plates table\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: '#333',\n    color: '#303030',\n    fontSize: 17,\n  },\n  body: {\n    fontSize: 15,\n  },\n}))(TableCell);\n\nfunction createData(name, type, platenumber, actions) {\n  return { name, type, platenumber, actions };\n}\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n    maxHeight: 400,\n    overflow: 'scroll'\n  },\n});\n\nconst primaryColor = '#2D2D2D'\nconst accentColor = '#1C63CD'\nconst accentColor_secondary = '#FD663A'\n\n\nclass CustomizedTables extends Component {\n\n  state = {\n      data: [],\n      showParentEdit: false,\n      showParentDeactivate: false,\n      search: '',\n      searchType: 'Plate Number',\n      loading: true \n  }\n\n  // handle sorting between parent and high risk type \n  handleSortChange = () => {\n\n    if(this.state.searchType === 'Plate Number'){\n      this.setState({searchType: 'Parent Name'})\n    }\n\n    else if(this.state.searchType === 'Parent Name'){\n      this.setState({searchType: 'Plate Number'})\n    }\n  }\n\n  async componentDidMount(){\n\n    // get all data (parent and high risk) on initial component mount and merge\n    let getData =  await Axios.get('/api/get/getPlates')\n    let getHighAlert = await Axios.get('/api/get/getHighRisk')\n\n    let plateData = getData.data\n    let highAlertData = getHighAlert.data\n\n    // merge parent plate and highAlert plate data\n    let mergedData = plateData.concat(highAlertData)\n    console.log(\"Plate list:\", mergedData)\n\n    this.setState({data: mergedData, loading: false})\n  }\n\n  onCancel = () => {\n    this.setState({showParentEdit: false, showParentDeactivate: false})\n  }\n\n  // submitted callback to refresh the db and update the table component\n  submitted = async() => {\n    this.setState({showParentEdit: false, showParentDeactivate: false})\n\n    let getData =  await Axios.get('/api/get/getPlates')\n    let getHighAlert = await Axios.get('/api/get/getHighRisk')\n\n    let plateData = getData.data\n    let highAlertData = getHighAlert.data\n\n    // merge parent plate and highAlert plate data\n    let mergedData = plateData.concat(highAlertData)\n    console.log(\"Plate list:\", mergedData)\n\n    this.setState({data: mergedData})\n  }\n\n  // update search bar search value \n  updateSearch = (event) => {\n\n    // assume search value won't be larger than 20 characters long \n    this.setState({search: event.target.value.substr(0, 20)})\n    console.log(\"Search\")\n  }\n\n  render(){\n  const {classes} = this.props;\n\n  // filter the data by name pr number\n  let filteredData = this.state.data.filter(\n    (person) => {\n\n      // filter by name \n      if(this.state.searchType === 'Parent Name'){\n        // the name we're searching for is a parent plate\n        if(person.parentName){\n          return person.parentName.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1\n        }\n        // the name we're searching for is a criminal plate\n        else if(person.name){\n          return person.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1\n        }\n      }\n\n      // the user chooses to search by plate number \n      else if(this.state.searchType === 'Plate Number'){\n        if(person.plateNumber){\n          return person.plateNumber.indexOf(this.state.search) !== -1\n        }\n      }\n    }\n  )\n  \n  const headerCellStyle={backgroundColor: '#F6F7F8', color: primaryColor, fontWeight: 'bold', fontSize: '15px'}\n  const schoolID = JSON.parse(localStorage.getItem('userObj'))._id\n\n  return (\n  <div>\n    <div style={{width: '100%', display: 'flex', alignItems: 'center'}}>\n      <TextField \n        onChange={this.updateSearch} \n        color={accentColor}\n        label={<span style={{marginLeft: '10px', marginBottom: '5px', fontSize: '15px'}}>Searching By {this.state.searchType === 'Plate Number' ? 'Number' : 'Name'}</span>} \n        variant=\"outlined\" \n        style={{width: '250px', height: '15px', marginBottom: '50px'}}>\n      </TextField>\n      <Button style={{height: '75%', marginLeft: '10px', color: accentColor, fontWeight: 550}} onClick={this.handleSortChange}>\n        Search by {this.state.searchType === 'Parent Name' ? 'Plate Number' : 'Parent Name'}\n      </Button>\n    </div>\n    {this.state.loading ?\n    <div style={{marginLeft: '28%'}}>\n      <Loader\n      type=\"Rings\"\n      color={accentColor}\n      secondaryColor={accentColor_secondary}\n      height={400}\n      width={400}\n      />\n    </div> : \n    <TableContainer component={Paper} style={{maxHeight: 600}}>\n      <Table className={classes.table} stickyHeader aria-label=\"sticky table\">\n        <TableHead style={{color: '#fff'}}>\n          <TableRow>\n            <StyledTableCell style={headerCellStyle}>Name</StyledTableCell>\n            <StyledTableCell style={headerCellStyle} align=\"left\">Type</StyledTableCell>\n            <StyledTableCell style={headerCellStyle} align=\"left\">Plate Number</StyledTableCell>\n            <StyledTableCell style={headerCellStyle} align=\"right\">Actions</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody style={{maxHeight: 550, overflow: 'scroll', color: '#000A40'}}>\n          {filteredData.map((row, i) => {\n            if(row.isActive && row.schoolID === schoolID){\n                return <TableItem \n                  i={i} \n                  id={row._id} \n                  onSubmit={this.submitted} \n                  studentName={row.studentName} \n                  name={row.parentName ? row.parentName : row.name} \n                  type={row.parentName ? 'Parent': row.type} \n                  plateNumber={row.plateNumber}/>\n              }\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>}\n    </div>\n  )};\n}\n\nexport default withStyles(useStyles)(CustomizedTables)"]},"metadata":{},"sourceType":"module"}